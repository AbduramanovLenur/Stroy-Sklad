{"version":3,"file":"update-XFnKK74j.js","sources":["../../src/views/object/update.vue"],"sourcesContent":["<template>\r\n    <section class=\"manage section-height shadowed\" v-if=\"isShow\">\r\n        <div class=\"manage__inner section-padding\">\r\n            <ManageHead \r\n                title=\"editObjectTitle\" \r\n                :to=\"routes.OBJECT.path\"\r\n            />\r\n            <form class=\"manage__form form-manage\" @submit.prevent=\"submitHandler\">\r\n                <FormInput \r\n                    v-for=\"input in inputs\"\r\n                    :key=\"input.id\"\r\n                    v-model=\"state[input.model]\"\r\n                    :width=\"500\" \r\n                    :placeholder=\"$t(input.placeholder)\"\r\n                    :name=\"input.icon\"\r\n                    :error=\"v$?.[input?.errorKey]?.$error\" \r\n                    :textError=\"v$?.[input?.errorKey]?.$errors[0]?.$message\"\r\n                >\r\n                    {{ $t(input.label) }}\r\n                </FormInput>\r\n                <FormSelect \r\n                    v-for=\"select in selects\"\r\n                    :key=\"select.id\"\r\n                    v-model=\"state[select.model]\" \r\n                    :width=\"500\" \r\n                    :options=\"select.options\"\r\n                    :error=\"v$?.[select?.errorKey]?.$error\" \r\n                    :placeholder=\"select?.placeholder\"\r\n                    :textError=\"v$?.[select?.errorKey]?.$errors[0]?.$message\"\r\n                    :success=\"select.success\"\r\n                    :loading=\"select.loading\"\r\n                >\r\n                    {{ $t(select.label) }}\r\n                </FormSelect>\r\n                <CustomButton \r\n                    :className=\"`form__submit ${v$?.stateId.$errors[0]?.$message ? 'centered' : ''}`\"\r\n                >\r\n                    {{ $t(\"formButton\") }}\r\n                </CustomButton>\r\n            </form>\r\n        </div>\r\n    </section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, watch } from \"vue\";\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport { storeToRefs } from \"pinia\";\r\nimport { useUserStore } from \"@/store/userStore\";\r\nimport { useVuelidate } from \"@vuelidate/core\";\r\nimport { useToast } from \"vue-toastification\";\r\nimport { useI18n } from \"vue-i18n\";\r\nimport { required } from \"@/utils/i18n-validators.js\";\r\nimport { \r\n    useQueryClient, \r\n    useQuery, \r\n    useMutation \r\n} from \"@tanstack/vue-query\";\r\nimport { getWithId, updateById } from \"@/services/crud.services.js\";\r\nimport { \r\n    manualGetRegions, \r\n    manualGetDistricts, \r\n    manualGetStates \r\n} from \"@/services/manual.services.js\";\r\nimport { routes } from \"@/utils/routes.js\";\r\nimport { actionModules } from \"@/utils/action-modules.js\";\r\n\r\nconst queryClient = useQueryClient();\r\nconst router = useRouter();\r\nconst route = useRoute();\r\nconst toast = useToast();\r\nconst { t } = useI18n();\r\n\r\nconst userStore = useUserStore();\r\nconst { user } = storeToRefs(userStore);\r\n\r\nconst isShow = computed(() => !!user?.value.user?.modules?.includes(actionModules.OBJECT.UPDATE));\r\n\r\nconst slugId = ref(route.params.id);\r\n\r\nconst isSubmit = ref(false);\r\nconst isFirstChange = ref(false);\r\n\r\nconst state = ref({\r\n    id: \"\",\r\n    name: \"\",\r\n    address: \"\",\r\n    regionId: [],\r\n    districtId: [],\r\n    stateId: []\r\n});\r\n\r\nconst rules = computed(() => ({\r\n    id: { required },\r\n    name: { required },\r\n    address: { required },\r\n    regionId: { required },\r\n    districtId: { required },\r\n    stateId: { required }\r\n}));\r\n\r\nconst v$ = useVuelidate(rules, state);\r\n\r\nconst {\r\n    data: regions,\r\n    isSuccess: isSuccessRegions,\r\n    isLoading: isLoadingRegions\r\n} = await useQuery({\r\n    queryKey: [\"regions\"],\r\n    queryFn: () => manualGetRegions(),\r\n    enabled: isShow\r\n});\r\n\r\nconst valueRegion = computed(() => state.value.regionId);\r\n\r\nconst isEnabled = computed(() => !!valueRegion.value.length);\r\n\r\nwatch(valueRegion, () => {\r\n    if (!isFirstChange.value && !isSubmit.value) {\r\n        state.value.districtId = [];\r\n    }\r\n\r\n    isFirstChange.value = false;\r\n}, { immediate: true });\r\n\r\nconst {\r\n    data: districts,\r\n    isSuccess: isSuccessDistricts,\r\n    isLoading: isLoadingDistricts\r\n} = await useQuery({\r\n    queryKey: [\"districts\", { districtId: valueRegion }],\r\n    queryFn: () => manualGetDistricts(valueRegion.value),\r\n    enabled: isEnabled\r\n});\r\n\r\nconst {\r\n    data: states,\r\n    isSuccess: isSuccessStates,\r\n    isLoading: isLoadingStates\r\n} = await useQuery({\r\n    queryKey: [\"states\"],\r\n    queryFn: () => manualGetStates(),\r\n    enabled: isShow\r\n});\r\n\r\nconst inputs = ref([\r\n    { \r\n        id: 1, \r\n        model: \"name\", \r\n        label: \"nameObjectLabel\", \r\n        placeholder: \"nameObjectPlaceholder\", \r\n        icon: \"input-company\",\r\n        errorKey: \"name\",\r\n    },\r\n    { \r\n        id: 2, \r\n        model: \"address\", \r\n        label: \"addressObjectLabel\", \r\n        placeholder: \"addressObjectPlaceholder\", \r\n        icon: \"address\",\r\n        errorKey: \"address\",\r\n    },\r\n]);\r\n\r\nconst selects = ref([\r\n    { \r\n        id: 1, \r\n        model: \"regionId\", \r\n        label: \"regionObjectLabel\",\r\n        placeholder: \"regionObjectPlaceholder\", \r\n        errorKey: \"regionId\",\r\n        options: regions,\r\n        success: isSuccessRegions,\r\n        loading: isLoadingRegions\r\n    },\r\n    { \r\n        id: 2, \r\n        model: \"districtId\", \r\n        label: \"districtObjectLabel\",\r\n        placeholder: \"districtObjectPlaceholder\",  \r\n        errorKey: \"districtId\",\r\n        options: districts,\r\n        success: isSuccessDistricts,\r\n        loading: isLoadingDistricts\r\n    },\r\n    { \r\n        id: 3, \r\n        model: \"stateId\", \r\n        label: \"stateObjectLabel\",\r\n        placeholder: \"stateObjectLabel\",  \r\n        errorKey: \"stateId\",\r\n        options: states,\r\n        success: isSuccessStates,\r\n        loading: isLoadingStates\r\n    }\r\n]);\r\n\r\nconst { isError } = await useQuery({\r\n    queryKey: [\"objectById\", slugId],\r\n    queryFn: () => getWithId(\"building_object\", slugId.value),\r\n    select: (data) => {\r\n        state.value.id = data.id;\r\n        state.value.name = data.fullName;\r\n        state.value.address = data.address;\r\n        state.value.regionId = [data.regionId];\r\n        state.value.districtId = [data.districtId];\r\n        state.value.stateId = [data.stateId];\r\n\r\n        isFirstChange.value = true;\r\n    },\r\n    enabled: isShow\r\n});\r\n\r\nwatch(isError, (value) => {\r\n    if (value) {\r\n        router.push(routes.HOME.path);\r\n    }\r\n});\r\n\r\nconst { mutate: updateMutate } = useMutation({\r\n    onMutate: (body) => {\r\n        isSubmit.value = true;\r\n\r\n        body.regionId = body.regionId[0];\r\n        body.districtId = body.districtId[0];\r\n        body.stateId = body.stateId[0];\r\n    },\r\n    mutationFn: (body) => updateById(\"building_object\", body),\r\n    onSuccess: () => {\r\n        queryClient.invalidateQueries({ queryKey: [\"objects\"] });\r\n        queryClient.invalidateQueries({ queryKey: [\"objectById\", slugId] });\r\n        queryClient.invalidateQueries({ queryKey: [\"objectsList\"] });\r\n        queryClient.invalidateQueries({ queryKey: [\"blocks\"] });\r\n        \r\n        router.push(routes.OBJECT.path);\r\n    }\r\n});\r\n\r\nconst submitHandler = async () => {\r\n    v$.value.$validate();\r\n\r\n    if (v$.value.$errors.length) {\r\n        return;\r\n    }\r\n\r\n    updateMutate(state.value);\r\n    v$.value.$reset();\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n</style>"],"names":["queryClient","useQueryClient","router","useRouter","route","useRoute","useToast","useI18n","userStore","useUserStore","user","storeToRefs","isShow","computed","_b","_a","actionModules","slugId","ref","isSubmit","isFirstChange","state","rules","required","v$","useVuelidate","regions","isSuccessRegions","isLoadingRegions","__temp","__restore","_withAsyncContext","useQuery","manualGetRegions","valueRegion","isEnabled","watch","districts","isSuccessDistricts","isLoadingDistricts","manualGetDistricts","states","isSuccessStates","isLoadingStates","manualGetStates","inputs","selects","isError","getWithId","data","value","routes","updateMutate","useMutation","body","updateById","submitHandler"],"mappings":"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"}