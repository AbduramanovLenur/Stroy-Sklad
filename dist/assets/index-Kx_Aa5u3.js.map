{"version":3,"file":"index-Kx_Aa5u3.js","sources":["../../src/views/companies/index.vue"],"sourcesContent":["<template>\r\n    <section class=\"company section-height\">\r\n        <div class=\"company__inner section-padding\">\r\n            <HeadPage \r\n                title=\"comapnyTitle\" \r\n                :to=\"routes.CREATE_COMPANIES.path\"\r\n                @onSearch=\"($event) => search = $event\"\r\n            />\r\n            <Table \r\n                v-if=\"isSuccessCompanies && companies.length\"\r\n                :headers=\"headers\" \r\n                :table=\"companies\" \r\n                :to=\"routes.UPDATE_COMPANIES.name\"\r\n                @onActionDelete=\"deleteHandler\"\r\n            />\r\n            <Spinner v-if=\"isLoadingCompanies\" />\r\n            <div \r\n                v-if=\"(isSuccessCompanies && !companies.length) || isError\" \r\n                class=\"empty-table\"\r\n            >\r\n                {{ $t(\"emptyTableTitle\") }}\r\n            </div>\r\n        </div>\r\n    </section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\nimport { useQueryClient, useQuery, useMutation } from \"@tanstack/vue-query\";\r\nimport { getList, deleteWithId } from \"@/services/crud.services.js\";\r\nimport { routes } from \"@/utils/routes.js\";\r\n\r\nconst queryClient = useQueryClient();\r\n\r\nconst search = ref(\"\");\r\nconst companyId = ref(\"\");\r\n\r\nconst headers = ref([\r\n    { id: 1, label: \"organizationName\", width: 220 },\r\n    { id: 2, label: \"organizationInn\", width: 115 },\r\n    { id: 3, label: \"organizationRegion\", width: 215 },\r\n    { id: 4, label: \"organizationDistrict\", width: 155 },\r\n    { id: 5, label: \"organizationAddress\", width: 200 },\r\n    { id: 6, label: \"organizationPhone\", width: 170 },\r\n    { id: 7, label: \"organizationDirector\", width: 245 },\r\n    { id: 7, label: \"organizationState\", width: 100 },\r\n    { id: 8, label: \"organizationAction\", width: 130 },\r\n]);\r\n\r\nconst {\r\n    data: companies,\r\n    isLoading: isLoadingCompanies,\r\n    isSuccess: isSuccessCompanies,\r\n    isError\r\n} = await useQuery({\r\n    queryKey: [\"companies\", search],\r\n    queryFn: () => getList(\"organization\", search.value)\r\n});\r\n\r\nconst { mutate: mutateDelete } = useMutation({\r\n    mutationFn: (idx) => deleteWithId(\"organization\", idx),\r\n    onSuccess: () => {\r\n        queryClient.invalidateQueries({ queryKey: [\"companies\"] });\r\n        queryClient.invalidateQueries({ queryKey: [\"companiesById\", companyId] });\r\n    }\r\n});\r\n\r\nconst deleteHandler = (idx) => {\r\n    companyId.value = idx;\r\n    mutateDelete(idx);\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>"],"names":["queryClient","useQueryClient","search","ref","companyId","headers","companies","isLoadingCompanies","isSuccessCompanies","isError","__temp","__restore","_withAsyncContext","useQuery","getList","mutateDelete","useMutation","idx","deleteWithId","deleteHandler"],"mappings":"wYAgCA,MAAMA,EAAcC,EAAc,EAE5BC,EAASC,EAAI,EAAE,EACfC,EAAYD,EAAI,EAAE,EAElBE,EAAUF,EAAI,CAChB,CAAE,GAAI,EAAG,MAAO,mBAAoB,MAAO,GAAK,EAChD,CAAE,GAAI,EAAG,MAAO,kBAAmB,MAAO,GAAK,EAC/C,CAAE,GAAI,EAAG,MAAO,qBAAsB,MAAO,GAAK,EAClD,CAAE,GAAI,EAAG,MAAO,uBAAwB,MAAO,GAAK,EACpD,CAAE,GAAI,EAAG,MAAO,sBAAuB,MAAO,GAAK,EACnD,CAAE,GAAI,EAAG,MAAO,oBAAqB,MAAO,GAAK,EACjD,CAAE,GAAI,EAAG,MAAO,uBAAwB,MAAO,GAAK,EACpD,CAAE,GAAI,EAAG,MAAO,oBAAqB,MAAO,GAAK,EACjD,CAAE,GAAI,EAAG,MAAO,qBAAsB,MAAO,GAAK,CACtD,CAAC,EAEK,CACF,KAAMG,EACN,UAAWC,EACX,UAAWC,EACX,QAAAC,CACJ,GAAU,CAAAC,EAAAC,CAAA,EAAAC,EAAA,IAAAC,EAAS,CACf,SAAU,CAAC,YAAaX,CAAM,EAC9B,QAAS,IAAMY,EAAQ,eAAgBZ,EAAO,KAAK,CACvD,CAAC,CAAA,mBAEK,CAAE,OAAQa,CAAc,EAAGC,EAAY,CACzC,WAAaC,GAAQC,EAAa,eAAgBD,CAAG,EACrD,UAAW,IAAM,CACbjB,EAAY,kBAAkB,CAAE,SAAU,CAAC,WAAW,CAAG,CAAA,EACzDA,EAAY,kBAAkB,CAAE,SAAU,CAAC,gBAAiBI,CAAS,CAAC,CAAE,CAC3E,CACL,CAAC,EAEKe,EAAiBF,GAAQ,CAC3Bb,EAAU,MAAQa,EAClBF,EAAaE,CAAG,CACpB"}