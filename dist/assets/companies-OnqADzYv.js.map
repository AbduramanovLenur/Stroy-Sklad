{"version":3,"file":"companies-OnqADzYv.js","sources":["../../src/views/companies.vue"],"sourcesContent":["<template>\r\n    <section class=\"company\">\r\n        <div class=\"company__inner section-padding\">\r\n            <HeadPage \r\n                title=\"comapnyTitle\" \r\n                @onSearch=\"($event) => companiesForm.search = $event\"\r\n                @onOpenFormModal=\"() => companiesHandler('create')\"\r\n            />\r\n            <Table \r\n                v-if=\"isSuccessCompanies && companies.length\"\r\n                :headers=\"headers\" \r\n                :table=\"companies\" \r\n                @onActionEdit=\"($event) => companiesHandler('edit', $event)\"\r\n                @onActionDelete=\"deleteCompanyHandler\"\r\n            />\r\n            <Spinner \r\n                v-if=\"isLoadingCompanies\" \r\n            />\r\n            <div \r\n                v-if=\"(isSuccessCompanies && !companies.length) || isError\" \r\n                class=\"empty-table\"\r\n            >\r\n                {{ $t(\"emptyTableTitle\") }}\r\n            </div>\r\n        </div>\r\n        <FormModal :title=\"titleModal\">\r\n            <form class=\"company__form\" @submit.prevent=\"submitFormHandler\">\r\n                <FormInput \r\n                    v-for=\"input in inputs\"\r\n                    :key=\"input.id\"\r\n                    v-model=\"companiesForm[input.model]\"\r\n                    :width=\"500\" \r\n                    :placeholder=\"$t(input.placeholder)\"\r\n                    :name=\"input.icon\"\r\n                    :error=\"v$?.[input.errorKey].$error\" \r\n                    :textError=\"v$?.[input.errorKey].$errors[0]?.$message\"\r\n                >\r\n                    {{ $t(input.label) }}\r\n                </FormInput>\r\n                <FormSelect \r\n                    v-for=\"select in selects\"\r\n                    :key=\"select.id\"\r\n                    v-model=\"companiesForm[select.model]\" \r\n                    :width=\"500\" \r\n                    :options=\"select.options\"\r\n                    :error=\"v$?.[select?.errorKey]?.$error\" \r\n                    :textError=\"v$?.[select?.errorKey]?.$errors[0]?.$message\"\r\n                    :success=\"select.success\"\r\n                    :loading=\"select.loading\"\r\n                    :show=\"select?.show\"\r\n                    :requestFlag=\"requestFlag\"\r\n                >\r\n                    {{ $t(select.label) }}\r\n                </FormSelect>\r\n                <CustomButton \r\n                    :className=\"`form__submit ${v$?.districtId.$errors[0]?.$message ? 'centered' : ''}`\"\r\n                >\r\n                    {{ $t(\"formButton\") }}\r\n                </CustomButton>\r\n            </form>\r\n        </FormModal>\r\n    </section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from \"vue\";\r\nimport { storeToRefs } from \"pinia\";\r\nimport { useVuelidate } from \"@vuelidate/core\";\r\nimport { required } from \"@/utils/i18n-validators.js\";\r\nimport { \r\n    useQueryClient, \r\n    useQuery, \r\n    useMutation \r\n} from \"@tanstack/vue-query\";\r\nimport { useModalsStore } from \"@/store/modalsStore.js\";\r\nimport { \r\n    getList, \r\n    getWithId, \r\n    create, \r\n    updateById, \r\n    deleteWithId \r\n} from \"@/services/crud.services.js\";\r\nimport { \r\n    manualGetRegions,\r\n    manualGetDistricts,\r\n    manualGetStates\r\n} from \"@/services/manual.services.js\";\r\nimport { clearForm } from \"@/utils/secondary-functions.js\";\r\n\r\n\r\nconst queryClient = useQueryClient();\r\n\r\nconst modalsStore = useModalsStore();\r\nconst { toggleIsOpenModalForm } = modalsStore;\r\nconst { isOpenModalForm } = storeToRefs(modalsStore);\r\n\r\nconst titleModal = ref(\"addNewCompanyTitle\");\r\nconst requestFlag = ref(\"\");\r\nconst requestId = ref(0);\r\n\r\nconst isEnabled = computed(() => isOpenModalForm);\r\nconst isEdit = computed(() => isOpenModalForm && requestFlag.value === 'edit');\r\n\r\nconst {\r\n    data: regions,\r\n    isSuccess: isSuccessRegions,\r\n    isLoading: isLoadingRegions\r\n} = await useQuery({\r\n    queryKey: [\"regions\"],\r\n    queryFn: () => manualGetRegions(),\r\n    enabled: isEnabled\r\n});\r\n\r\nconst {\r\n    data: districts,\r\n    isSuccess: isSuccessDistricts,\r\n    isLoading: isLoadingDistricts\r\n} = await useQuery({\r\n    queryKey: [\"districts\"],\r\n    queryFn: () => manualGetDistricts(),\r\n    enabled: isEnabled\r\n});\r\n\r\nconst {\r\n    data: states,\r\n    isSuccess: isSuccessStates,\r\n    isLoading: isLoadingStates\r\n} = await useQuery({\r\n    queryKey: [\"states\"],\r\n    queryFn: () => manualGetStates(),\r\n    enabled: isEdit\r\n});\r\n\r\nconst companiesForm = ref({\r\n    id: \"\",\r\n    fullName: \"\",\r\n    inn: \"\",\r\n    address: \"\",\r\n    phoneNumber: \"\",\r\n    director: \"\",\r\n    regionId: \"\",\r\n    districtId: \"\",\r\n    stateId: \"\",\r\n    search: \"\"\r\n});\r\n\r\nconst rules = computed(() => ({\r\n    fullName: { required },\r\n    inn: { required },\r\n    address: { required },\r\n    phoneNumber: { required },\r\n    director: { required },\r\n    regionId: { required },\r\n    districtId: { required },\r\n}));\r\n\r\nconst headers = ref([\r\n    { id: 1, label: \"organizationName\", width: 220 },\r\n    { id: 2, label: \"organizationInn\", width: 115 },\r\n    { id: 3, label: \"organizationRegion\", width: 215 },\r\n    { id: 4, label: \"organizationDistrict\", width: 155 },\r\n    { id: 5, label: \"organizationAddress\", width: 200 },\r\n    { id: 6, label: \"organizationPhone\", width: 170 },\r\n    { id: 7, label: \"organizationDirector\", width: 245 },\r\n    { id: 7, label: \"organizationState\", width: 100 },\r\n    { id: 8, label: \"organizationAction\", width: 130 },\r\n]);\r\n\r\nconst inputs = ref([\r\n    { \r\n        id: 1, \r\n        model: \"fullName\", \r\n        label: \"nameOrganizationLabel\", \r\n        placeholder: \"nameOrganizationPlaceholder\", \r\n        icon: \"input-company\",\r\n        errorKey: \"fullName\",\r\n    },\r\n    { \r\n        id: 2, \r\n        model: \"inn\", \r\n        label: \"innOrganizationLabel\", \r\n        placeholder: \"innOrganizationPlaceholder\", \r\n        icon: \"tin\",\r\n        errorKey: \"inn\",\r\n    },\r\n    { \r\n        id: 3, \r\n        model: \"address\", \r\n        label: \"addressOrganizationLabel\", \r\n        placeholder: \"addressOrganizationPlaceholder\", \r\n        icon: \"address\",\r\n        errorKey: \"address\",\r\n    },\r\n    { \r\n        id: 4, \r\n        model: \"phoneNumber\", \r\n        label: \"phoneOrganizationLabel\", \r\n        placeholder: \"phoneOrganizationPlaceholder\", \r\n        icon: \"phone\",\r\n        errorKey: \"phoneNumber\",\r\n    },\r\n    { \r\n        id: 5, \r\n        model: \"director\", \r\n        label: \"directorOrganizationLabel\", \r\n        placeholder: \"directorOrganizationPlaceholder\", \r\n        icon: \"person\",\r\n        errorKey: \"director\",\r\n    }\r\n]);\r\n\r\nconst selects = ref([\r\n    { \r\n        id: 1, \r\n        model: \"regionId\", \r\n        label: \"regionOrganizationLabel\", \r\n        options: regions,\r\n        errorKey: \"regionId\",\r\n        success: isSuccessRegions,\r\n        loading: isLoadingRegions,\r\n        show: [\"create\", \"edit\"]\r\n    },\r\n    { \r\n        id: 2, \r\n        model: \"districtId\", \r\n        label: \"districtOrganizationLabel\", \r\n        options: districts,\r\n        errorKey: \"districtId\",\r\n        success: isSuccessDistricts,\r\n        loading: isLoadingDistricts,\r\n        show: [\"create\", \"edit\"]\r\n    },\r\n    { \r\n        id: 3, \r\n        model: \"stateId\", \r\n        label: \"stateOrganizationLabel\", \r\n        options: states,\r\n        success: isSuccessStates,\r\n        loading: isLoadingStates,\r\n        show: \"update\",\r\n        show: [\"edit\"]\r\n    }\r\n]);\r\n\r\nconst v$ = useVuelidate(rules, companiesForm);\r\n\r\nconst {\r\n    data: companies,\r\n    isLoading: isLoadingCompanies,\r\n    isSuccess: isSuccessCompanies,\r\n    isError\r\n} = await useQuery({\r\n    queryKey: [\"companies\"],\r\n    queryFn: () => getList(\"organization\")\r\n});\r\n\r\nconst { } = await useQuery({\r\n    queryKey: [\"companiesById\", requestId],\r\n    queryFn: () => getWithId(\"organization\", requestId.value),\r\n    select: (data) => {\r\n        companiesForm.value.id = data.id;\r\n        companiesForm.value.fullName = data.fullName;\r\n        companiesForm.value.inn = data.inn;\r\n        companiesForm.value.address = data.address;\r\n        companiesForm.value.phoneNumber = data.phoneNumber;\r\n        companiesForm.value.director = data.director;\r\n        companiesForm.value.regionId = data.regionId;\r\n        companiesForm.value.districtId = data.districtId;\r\n        companiesForm.value.stateId = data.stateId;\r\n    },\r\n    enabled: isEdit\r\n});\r\n\r\nconst { mutate: createMutate } = useMutation({\r\n    mutationFn: (body) => create(\"organization\", body),\r\n    onSuccess: () => {\r\n        queryClient.invalidateQueries({ queryKey: [\"companies\"] });\r\n    }\r\n});\r\n\r\nconst { mutate: updateMutate } = useMutation({\r\n    mutationFn: (body) => updateById(\"organization\", body),\r\n    onSuccess: () => {\r\n        queryClient.invalidateQueries({ queryKey: [\"companies\"] });\r\n        queryClient.invalidateQueries({ queryKey: [\"companiesById\", requestId] });\r\n    }\r\n});\r\n\r\nconst { mutate: mutateDelete } = useMutation({\r\n    mutationFn: (idx) => deleteWithId(\"organization\", idx),\r\n    onSuccess: () => {\r\n        queryClient.invalidateQueries({ queryKey: [\"companies\"] });\r\n        queryClient.invalidateQueries({ queryKey: [\"companiesById\", requestId] });\r\n    }\r\n});\r\n\r\nconst isOpenFormModal = (title, flag) => {\r\n    titleModal.value = title;\r\n    requestFlag.value = flag;\r\n    toggleIsOpenModalForm();\r\n\r\n    if (requestFlag.value === \"create\" && isOpenModalForm.value) {\r\n        companiesForm.value = clearForm(companiesForm.value);\r\n        v$.value.$reset();\r\n    }\r\n}\r\n\r\nconst companiesHandler = (flag, idx) => {\r\n    if (flag === \"edit\" && idx) {\r\n        requestId.value = idx;\r\n        isOpenFormModal(\"editCompanyTitle\", \"edit\");\r\n        return;\r\n    }\r\n\r\n    isOpenFormModal(\"addNewCompanyTitle\", \"create\");\r\n}\r\n\r\nconst deleteCompanyHandler = async (idx) => {\r\n    mutateDelete(idx);\r\n}\r\n\r\nconst submitFormHandler = async () => {\r\n    v$.value.$validate();\r\n\r\n    if (v$.value.$errors.length) {\r\n        return;\r\n    }\r\n\r\n    if (requestFlag.value === \"create\") {\r\n        delete companiesForm.value.id;\r\n        delete companiesForm.value.stateId;\r\n        delete companiesForm.value.search;\r\n\r\n        createMutate(companiesForm.value);\r\n    } else {\r\n        updateMutate(companiesForm.value);\r\n    }\r\n\r\n    toggleIsOpenModalForm();\r\n    companiesForm.value = clearForm(companiesForm.value);\r\n    v$.value.$reset();\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.company {\r\n    &__form {\r\n        display: grid;\r\n        grid-template-columns: repeat(2, 1fr);\r\n        gap: 20px;\r\n        @media (max-width: 1024px) {\r\n            gap: 10px;\r\n        }\r\n        @media (max-width: 768px) {\r\n            grid-template-columns: repeat(1, 1fr);\r\n            gap: 20px;\r\n        }\r\n    }\r\n}\r\n</style>"],"names":["queryClient","useQueryClient","modalsStore","useModalsStore","toggleIsOpenModalForm","isOpenModalForm","storeToRefs","titleModal","ref","requestFlag","requestId","isEnabled","computed","isEdit","regions","isSuccessRegions","isLoadingRegions","__temp","__restore","_withAsyncContext","useQuery","manualGetRegions","districts","isSuccessDistricts","isLoadingDistricts","manualGetDistricts","states","isSuccessStates","isLoadingStates","manualGetStates","companiesForm","rules","required","headers","inputs","selects","v$","useVuelidate","companies","isLoadingCompanies","isSuccessCompanies","isError","getList","getWithId","data","createMutate","useMutation","body","create","updateMutate","updateById","mutateDelete","idx","deleteWithId","isOpenFormModal","title","flag","clearForm","companiesHandler","deleteCompanyHandler","submitFormHandler"],"mappings":"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"}