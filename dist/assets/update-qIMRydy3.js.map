{"version":3,"file":"update-qIMRydy3.js","sources":["../../src/views/companies/update.vue"],"sourcesContent":["<template>\r\n    <section class=\"manage section-height shadowed\">\r\n        <div class=\"manage__inner section-padding\">\r\n            <Title>\r\n                {{ $t(\"editCompanyTitle\") }}\r\n            </Title>\r\n            <form class=\"manage__form form-manage\" @submit.prevent=\"submitHandler\">\r\n                <FormInput \r\n                    v-for=\"input in inputs\"\r\n                    :key=\"input.id\"\r\n                    v-model=\"state[input.model]\"\r\n                    :width=\"500\" \r\n                    :placeholder=\"$t(input.placeholder)\"\r\n                    :name=\"input.icon\"\r\n                    :error=\"v$?.[input?.errorKey]?.$error\" \r\n                    :textError=\"v$?.[input?.errorKey]?.$errors[0]?.$message\"\r\n                >\r\n                    {{ $t(input.label) }}\r\n                </FormInput>\r\n                <FormSelect \r\n                    v-for=\"select in selects\"\r\n                    :key=\"select.id\" \r\n                    v-model=\"state[select.model]\"\r\n                    :width=\"500\" \r\n                    :options=\"select.options\"\r\n                    :error=\"v$?.[select?.errorKey]?.$error\" \r\n                    :placeholder=\"select?.placeholder\"\r\n                    :textError=\"v$?.[select?.errorKey]?.$errors[0]?.$message\"\r\n                    :success=\"select.success\"\r\n                    :loading=\"select.loading\"\r\n                >\r\n                    {{ $t(select.label) }}\r\n                </FormSelect>\r\n                <CustomButton \r\n                    :className=\"`form__submit ${v$?.stateId.$errors[0]?.$message ? 'centered' : ''}`\"\r\n                >\r\n                    {{ $t(\"formButton\") }}\r\n                </CustomButton>\r\n            </form>\r\n        </div>\r\n    </section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, watch } from \"vue\";\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport { useVuelidate } from \"@vuelidate/core\";\r\nimport { useToast } from \"vue-toastification\";\r\nimport { useI18n } from \"vue-i18n\";\r\nimport { required } from \"@/utils/i18n-validators.js\";\r\nimport { useQueryClient, useQuery, useMutation } from \"@tanstack/vue-query\";\r\nimport { getWithId, updateById } from \"@/services/crud.services.js\";\r\nimport { manualGetRegions, manualGetDistricts, manualGetStates } from \"@/services/manual.services.js\";\r\nimport { routes } from \"@/utils/routes.js\";\r\nimport { useTableStore } from \"@/store/tableStore\";\r\n\r\nconst queryClient = useQueryClient();\r\nconst router = useRouter();\r\nconst route = useRoute();\r\nconst toast = useToast();\r\nconst { t } = useI18n();\r\n\r\nconst tableStore = useTableStore();\r\nconst { setPagePagination, setLimitPagination } = tableStore;\r\n\r\nconst slugId = ref(route.params.id);\r\n\r\nconst {\r\n    data: regions,\r\n    isSuccess: isSuccessRegions,\r\n    isLoading: isLoadingRegions\r\n} = await useQuery({\r\n    queryKey: [\"regions\"],\r\n    queryFn: () => manualGetRegions()\r\n});\r\n\r\nconst {\r\n    data: districts,\r\n    isSuccess: isSuccessDistricts,\r\n    isLoading: isLoadingDistricts\r\n} = await useQuery({\r\n    queryKey: [\"districts\"],\r\n    queryFn: () => manualGetDistricts()\r\n});\r\n\r\nconst {\r\n    data: states,\r\n    isSuccess: isSuccessStates,\r\n    isLoading: isLoadingStates\r\n} = await useQuery({\r\n    queryKey: [\"states\"],\r\n    queryFn: () => manualGetStates()\r\n});\r\n\r\nconst state = ref({\r\n    id: \"\",\r\n    fullName: \"\",\r\n    inn: \"\",\r\n    address: \"\",\r\n    phoneNumber: \"\",\r\n    director: \"\",\r\n    regionId: [],\r\n    districtId: [],\r\n    stateId: []\r\n});\r\n\r\nconst rules = computed(() => ({\r\n    id: { required },\r\n    fullName: { required },\r\n    inn: { required },\r\n    address: { required },\r\n    phoneNumber: { required },\r\n    director: { required },\r\n    regionId: { required },\r\n    districtId: { required },\r\n    stateId: { required }\r\n}));\r\n\r\nconst v$ = useVuelidate(rules, state);\r\n\r\nconst inputs = ref([\r\n    { \r\n        id: 1, \r\n        model: \"fullName\", \r\n        label: \"nameOrganizationLabel\", \r\n        placeholder: \"nameOrganizationPlaceholder\", \r\n        icon: \"input-company\",\r\n        errorKey: \"fullName\",\r\n    },\r\n    { \r\n        id: 2, \r\n        model: \"inn\", \r\n        label: \"innOrganizationLabel\", \r\n        placeholder: \"innOrganizationPlaceholder\", \r\n        icon: \"tin\",\r\n        errorKey: \"inn\",\r\n    },\r\n    { \r\n        id: 3, \r\n        model: \"address\", \r\n        label: \"addressOrganizationLabel\", \r\n        placeholder: \"addressOrganizationPlaceholder\", \r\n        icon: \"address\",\r\n        errorKey: \"address\",\r\n    },\r\n    { \r\n        id: 4, \r\n        model: \"phoneNumber\", \r\n        label: \"phoneOrganizationLabel\", \r\n        placeholder: \"phoneOrganizationPlaceholder\", \r\n        icon: \"phone\",\r\n        errorKey: \"phoneNumber\",\r\n    },\r\n    { \r\n        id: 5, \r\n        model: \"director\", \r\n        label: \"directorOrganizationLabel\", \r\n        placeholder: \"directorOrganizationPlaceholder\", \r\n        icon: \"person\",\r\n        errorKey: \"director\",\r\n    }\r\n]);\r\n\r\nconst selects = ref([\r\n    { \r\n        id: 1, \r\n        model: \"regionId\", \r\n        label: \"regionOrganizationLabel\", \r\n        placeholder: \"regionOrganizationPlaceholder\",\r\n        errorKey: \"regionId\",\r\n        options: regions,\r\n        success: isSuccessRegions,\r\n        loading: isLoadingRegions\r\n    },\r\n    { \r\n        id: 2, \r\n        model: \"districtId\", \r\n        label: \"districtOrganizationLabel\", \r\n        placeholder: \"districtOrganizationPlaceholder\",\r\n        errorKey: \"districtId\",\r\n        options: districts,\r\n        success: isSuccessDistricts,\r\n        loading: isLoadingDistricts\r\n    },\r\n    { \r\n        id: 3, \r\n        model: \"stateId\", \r\n        label: \"stateOrganizationLabel\", \r\n        placeholder: \"stateOrganizationPlaceholder\",\r\n        errorKey: \"stateId\",\r\n        options: states,\r\n        success: isSuccessStates,\r\n        loading: isLoadingStates\r\n    }\r\n]);\r\n\r\nconst { isError } = await useQuery({\r\n    queryKey: [\"companiesById\", slugId],\r\n    queryFn: () => getWithId(\"organization\", slugId.value),\r\n    select: (data) => {\r\n        state.value.id = data.id;\r\n        state.value.fullName = data.fullName;\r\n        state.value.inn = data.inn;\r\n        state.value.address = data.address;\r\n        state.value.phoneNumber = data.phoneNumber;\r\n        state.value.director = data.director;\r\n        state.value.regionId = [data?.regionId];\r\n        state.value.districtId = [data?.districtId];\r\n        state.value.stateId = [data?.stateId];\r\n    }\r\n});\r\n\r\nwatch(isError, (value) => {\r\n    if (value) {\r\n        router.push(routes.HOME.path);\r\n    }\r\n});\r\n\r\nconst { mutate: updateMutate } = useMutation({\r\n    onMutate: (body) => {\r\n        body.regionId = body.regionId[0];\r\n        body.districtId = body.districtId[0];\r\n        body.stateId = body.stateId[0];\r\n    },\r\n    mutationFn: (body) => updateById(\"organization\", body),\r\n    onSuccess: async () => {\r\n        await queryClient.invalidateQueries({ queryKey: [\"companies\"] });\r\n        await queryClient.invalidateQueries({ queryKey: [\"companiesById\", slugId] });\r\n\r\n        setPagePagination(1);\r\n        setLimitPagination(10);\r\n\r\n        router.push(routes.COMPANIES.path);\r\n    }\r\n});\r\n\r\nconst submitHandler = async () => {\r\n    v$.value.$validate();\r\n\r\n    if (v$.value.$errors.length) {\r\n        return;\r\n    }\r\n\r\n    updateMutate(state.value);\r\n    v$.value.$reset();\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>"],"names":["queryClient","useQueryClient","router","useRouter","route","useRoute","useToast","useI18n","tableStore","useTableStore","setPagePagination","setLimitPagination","slugId","ref","regions","isSuccessRegions","isLoadingRegions","__temp","__restore","_withAsyncContext","useQuery","manualGetRegions","districts","isSuccessDistricts","isLoadingDistricts","manualGetDistricts","states","isSuccessStates","isLoadingStates","manualGetStates","state","rules","computed","required","v$","useVuelidate","inputs","selects","isError","getWithId","data","watch","value","routes","updateMutate","useMutation","body","updateById","submitHandler"],"mappings":"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"}