{"version":3,"file":"auth-Lvjq1T9e.js","sources":["../../src/assets/images/auth/logo-auth.svg","../../src/utils/secondary-functions.js","../../src/services/auth.services.js","../../src/views/auth.vue"],"sourcesContent":["export default \"__VITE_ASSET__Uv2xddi$__\"","export const clearForm = (formValues) => {\r\n  const form = { ...formValues };\r\n\r\n  for (const key in form) {\r\n    form[key] = \"\";\r\n  }\r\n\r\n  return form;\r\n};\r\n","import { request } from \"./generic.services\";\r\n\r\nexport const loginUser = (body) => request({ url: \"account/Login\", method: \"POST\", body });","<template>\r\n    <section class=\"auth\">\r\n        <div class=\"container\">\r\n            <div class=\"auth__inner\">\r\n                <div class=\"auth__wrapper\">\r\n                    <div class=\"auth__logo\">\r\n                        <img \r\n                            src=\"@/assets/images/auth/logo-auth.svg\" \r\n                            alt=\"logo\" \r\n                            width=\"415\" \r\n                            height=\"80\" \r\n                            loading=\"lazy\"\r\n                        >\r\n                    </div>\r\n                    <h2 class=\"auth__title\">\r\n                        {{ $t(\"login\") }}\r\n                    </h2>\r\n                    <form class=\"auth__form\" @submit.prevent=\"authHandler\">\r\n                        <label \r\n                            v-for=\"input in inputs\" \r\n                            :key=\"input.id\" \r\n                            class=\"auth__label\"\r\n                        >\r\n                            {{ $t(input.label) }}\r\n                            <input \r\n                                class=\"auth__input\" \r\n                                :type=\"input.type\" \r\n                                v-model=\"formData[input.model]\" \r\n                                :name=\"input.name\" \r\n                                :placeholder=\"$t(input.placeholder)\"\r\n                            >\r\n                            <span \r\n                                v-if=\"v$?.[input.errorKey].$error\" \r\n                                class=\"error-white\"\r\n                            >\r\n                                {{ v$?.[input.errorKey].$errors[0]?.$message }}\r\n                            </span>\r\n                        </label>\r\n                        <button class=\"auth__submit\" type=\"submit\">\r\n                            {{ $t(\"loginButton\") }}\r\n                        </button>\r\n                    </form>\r\n                    <SwitcherLang />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from \"vue\";\r\nimport { useVuelidate } from \"@vuelidate/core\";\r\nimport { required, minLength } from \"@/utils/i18n-validators.js\";\r\nimport { useToast } from \"vue-toastification\";\r\nimport { useI18n } from \"vue-i18n\";\r\nimport { useRouter } from \"vue-router\";\r\nimport { clearForm } from \"@/utils/secondary-functions.js\";\r\n\r\nimport { useMutation } from \"@tanstack/vue-query\";\r\nimport { loginUser } from \"@/services/auth.services.js\";\r\n\r\nconst router = useRouter();\r\nconst toast = useToast();\r\nconst { t } = useI18n();\r\n\r\nconst formData = ref({\r\n    userName: \"\",\r\n    password: \"\"\r\n})\r\n\r\nconst rules = computed(() => ({\r\n    userName: { required },\r\n    password: { required, minLength }\r\n}));\r\n\r\nconst v$ = useVuelidate(rules, formData);\r\n\r\nconst inputs = ref([\r\n    { \r\n        id: 1, \r\n        label: \"loginLabel\", \r\n        type: \"text\", \r\n        model: \"userName\", \r\n        name: \"login\", \r\n        placeholder: \"loginPlaceholder\",\r\n        errorKey: \"userName\" \r\n    },\r\n    { \r\n        id: 2, \r\n        label: \"passwordLabel\", \r\n        type: \"password\", \r\n        model: \"password\", \r\n        name: \"password\", \r\n        placeholder: \"passwordPlaceholder\",\r\n        errorKey: \"password\"  \r\n    },\r\n]);\r\n\r\nconst { mutate: loginMutate } = useMutation({\r\n    mutationFn: (body) => loginUser(body),\r\n    onSuccess: (data) => {\r\n        const { \r\n            token, \r\n            user: {\r\n                role, \r\n                fullName, \r\n                organizationName,\r\n                organizationId,\r\n                roleId\r\n            }\r\n        } = data;\r\n\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"name\", fullName);\r\n        localStorage.setItem(\"role\", role);\r\n        localStorage.setItem(\"organization\", organizationName);\r\n        localStorage.setItem(\"organizationId\", organizationId);\r\n        localStorage.setItem(\"roleId\", roleId);\r\n\r\n        router.push(\"/\");\r\n        toast.success(t(\"signInToast\"));\r\n\r\n        formData.value = clearForm(formData.value);\r\n        v$.value.$reset();\r\n    }\r\n});\r\n\r\nconst authHandler = () => {\r\n    v$.value.$validate();\r\n\r\n    if (v$.value.$errors.length) {\r\n        return;\r\n    }\r\n\r\n    loginMutate(formData.value);\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.auth {\r\n    background: radial-gradient(103.88% 58.43% at 56.74% 50%, #0085FF 0%, #003465 100%);\r\n    color: var(--white);\r\n    &__inner {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        height: 100vh;\r\n    }\r\n    &__wrapper {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        border-radius: 40px;\r\n        border: 3px solid rgba(88, 130, 193, 0.49);\r\n        background: rgba(88, 130, 193, 0.28);\r\n        backdrop-filter: blur(12.5px);\r\n        max-width: 690px;\r\n        width: 100%;\r\n        padding: 55px;\r\n        @media (max-width: 768px) {\r\n            padding: 55px 20px;\r\n        }\r\n        @media (max-width: 480px) {\r\n            padding: 35px 20px;\r\n        }\r\n    }\r\n    &__logo {\r\n        margin-bottom: 20px;\r\n    }\r\n    &__title {\r\n        font-size: 38px;\r\n        font-weight: 700;\r\n        margin-bottom: 25px;\r\n        @media (max-width: 1024px) {\r\n            font-size: 32px;\r\n        }\r\n        @media (max-width: 480px) {\r\n            font-size: 28px;\r\n            margin-bottom: 20px;\r\n        }\r\n        @media (max-width: 360px) {\r\n            font-size: 24px;\r\n            margin-bottom: 16px;\r\n        }\r\n        @media (max-width: 320px) {\r\n            font-size: 22px;\r\n        }\r\n    }\r\n    &__form {\r\n        display: flex;\r\n        flex-direction: column;\r\n        max-width: 500px;\r\n        width: 100%;\r\n        margin-bottom: 30px;\r\n    }\r\n    &__label {\r\n        width: 100%;\r\n        margin-bottom: 30px;\r\n        @media (max-width: 480px) {\r\n            margin-bottom: 20px;\r\n        }\r\n    }\r\n    &__input {\r\n        width: 100%;\r\n        height: 50px;\r\n        padding: 0 25px;\r\n        border-radius: 10px;\r\n        border: 1px solid var(--light);\r\n        color: var(--black);\r\n        margin-top: 5px;\r\n        @media (max-width: 480px) {\r\n            height: 40px;\r\n        }\r\n        &::placeholder {\r\n            font-size: 14px;\r\n            font-weight: 400;\r\n            color: var(--light);\r\n        }\r\n    }\r\n    &__submit {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        font-size: 20px;\r\n        font-weight: 700;\r\n        color: #fff;\r\n        background-color: var(--dark-blue);\r\n        height: 50px;\r\n        width: 100%;\r\n        padding: 10px;\r\n        border-radius: 10px;\r\n        @media (max-width: 480px) {\r\n            font-size: 18px;\r\n            height: 40px;\r\n        }\r\n    }\r\n}\r\n\r\n@media (hover: hover) {\r\n    .auth {\r\n        &__submit {\r\n            transition: 0.5s;\r\n            &:hover {\r\n                background-color: var(--black);\r\n            }\r\n        }\r\n    }\r\n}\r\n</style>"],"names":["_imports_0","clearForm","formValues","form","key","loginUser","body","request","router","useRouter","toast","useToast","t","useI18n","formData","ref","rules","computed","required","minLength","v$","useVuelidate","inputs","loginMutate","useMutation","data","token","role","fullName","organizationName","organizationId","roleId","authHandler"],"mappings":"qTAAA,MAAeA,EAAA,iCCAFC,EAAaC,GAAe,CACvC,MAAMC,EAAO,CAAE,GAAGD,GAElB,UAAWE,KAAOD,EAChBA,EAAKC,CAAG,EAAI,GAGd,OAAOD,CACT,ECNaE,EAAaC,GAASC,EAAQ,CAAE,IAAK,gBAAiB,OAAQ,OAAQ,KAAAD,EAAM,oaC2DzF,MAAME,EAASC,EAAS,EAClBC,EAAQC,EAAQ,EAChB,CAAE,EAAAC,CAAC,EAAKC,IAERC,EAAWC,EAAI,CACjB,SAAU,GACV,SAAU,EACd,CAAC,EAEKC,EAAQC,EAAS,KAAO,CAC1B,SAAU,CAAE,SAAAC,CAAU,EACtB,SAAU,CAAE,SAAAA,EAAU,UAAAC,CAAW,CACrC,EAAE,EAEIC,EAAKC,EAAaL,EAAOF,CAAQ,EAEjCQ,EAASP,EAAI,CACf,CACI,GAAI,EACJ,MAAO,aACP,KAAM,OACN,MAAO,WACP,KAAM,QACN,YAAa,mBACb,SAAU,UACb,EACD,CACI,GAAI,EACJ,MAAO,gBACP,KAAM,WACN,MAAO,WACP,KAAM,WACN,YAAa,sBACb,SAAU,UACb,CACL,CAAC,EAEK,CAAE,OAAQQ,CAAa,EAAGC,EAAY,CACxC,WAAalB,GAASD,EAAUC,CAAI,EACpC,UAAYmB,GAAS,CACjB,KAAM,CACF,MAAAC,EACA,KAAM,CACF,KAAAC,EACA,SAAAC,EACA,iBAAAC,EACA,eAAAC,EACA,OAAAC,CACH,CACJ,EAAGN,EAEJ,aAAa,QAAQ,QAASC,CAAK,EACnC,aAAa,QAAQ,OAAQE,CAAQ,EACrC,aAAa,QAAQ,OAAQD,CAAI,EACjC,aAAa,QAAQ,eAAgBE,CAAgB,EACrD,aAAa,QAAQ,iBAAkBC,CAAc,EACrD,aAAa,QAAQ,SAAUC,CAAM,EAErCvB,EAAO,KAAK,GAAG,EACfE,EAAM,QAAQE,EAAE,aAAa,CAAC,EAE9BE,EAAS,MAAQb,EAAUa,EAAS,KAAK,EACzCM,EAAG,MAAM,QACZ,CACL,CAAC,EAEKY,EAAc,IAAM,CACtBZ,EAAG,MAAM,YAEL,CAAAA,EAAG,MAAM,QAAQ,QAIrBG,EAAYT,EAAS,KAAK,CAC9B"}