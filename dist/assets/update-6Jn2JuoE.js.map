{"version":3,"file":"update-6Jn2JuoE.js","sources":["../../src/views/block/update.vue"],"sourcesContent":["<template>\r\n    <section class=\"manage section-height shadowed\" v-if=\"isShow\">\r\n        <div class=\"manage__inner section-padding\">\r\n            <ManageHead \r\n                title=\"editBlocksTitle\" \r\n                :to=\"routes.BLOCK.path\"\r\n            />\r\n            <form class=\"manage__form form-manage\" @submit.prevent=\"submitHandler\">\r\n                <FormInput \r\n                    v-for=\"input in inputs\"\r\n                    :key=\"input.id\"\r\n                    v-model=\"state[input.model]\"\r\n                    :width=\"500\" \r\n                    :placeholder=\"$t(input.placeholder)\"\r\n                    :name=\"input.icon\"\r\n                    :error=\"v$?.[input?.errorKey]?.$error\" \r\n                    :textError=\"v$?.[input?.errorKey]?.$errors[0]?.$message\"\r\n                >\r\n                    {{ $t(input.label) }}\r\n                </FormInput>\r\n                <FormSelect \r\n                    v-for=\"select in selects\"\r\n                    :key=\"select.id\"\r\n                    v-model=\"state[select.model]\" \r\n                    :width=\"500\" \r\n                    :options=\"select.options\"\r\n                    :error=\"v$?.[select?.errorKey]?.$error\" \r\n                    :placeholder=\"select?.placeholder\"\r\n                    :textError=\"v$?.[select?.errorKey]?.$errors[0]?.$message\"\r\n                    :success=\"select.success\"\r\n                    :loading=\"select.loading\"\r\n                >\r\n                    {{ $t(select.label) }}\r\n                </FormSelect>\r\n                <CustomButton \r\n                    :className=\"`form__submit ${v$?.stateId.$errors[0]?.$message ? 'centered' : ''}`\"\r\n                >\r\n                    {{ $t(\"formButton\") }}\r\n                </CustomButton>\r\n            </form>\r\n        </div>\r\n    </section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, watch } from \"vue\";\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport { useVuelidate } from \"@vuelidate/core\";\r\nimport { useToast } from \"vue-toastification\";\r\nimport { useI18n } from \"vue-i18n\";\r\nimport { required } from \"@/utils/i18n-validators.js\";\r\nimport { storeToRefs } from \"pinia\";\r\nimport { useUserStore } from \"@/store/userStore\";\r\nimport { \r\n    useQueryClient, \r\n    useQuery, \r\n    useMutation \r\n} from \"@tanstack/vue-query\";\r\nimport { getWithId, updateById } from \"@/services/crud.services.js\";\r\nimport { \r\n    manualGetRegions, \r\n    manualGetDistricts, \r\n    manualGetStates, \r\n    manualGetObjects \r\n} from \"@/services/manual.services.js\";\r\nimport { routes } from \"@/utils/routes.js\";\r\nimport { actionModules } from \"@/utils/action-modules.js\";\r\n\r\nconst queryClient = useQueryClient();\r\nconst router = useRouter();\r\nconst route = useRoute();\r\nconst toast = useToast();\r\nconst { t } = useI18n();\r\n\r\nconst slugId = ref(route.params.id);\r\n\r\nconst userStore = useUserStore();\r\nconst { user } = storeToRefs(userStore);\r\n\r\nconst isShow = computed(() => !!user?.value.user?.modules?.includes(actionModules.BLOCK.UPDATE));\r\n\r\nconst isSubmit = ref(false);\r\nconst isFirstChange = ref(false);\r\n\r\nconst state = ref({\r\n    id: \"\",\r\n    fullname: \"\",\r\n    numberOfFloors: \"\",\r\n    roomsOnFloor: \"\",\r\n    address: \"\",\r\n    buildingObjectId: [],\r\n    regionId: [],\r\n    districtId: [],\r\n    stateId: [],\r\n});\r\n\r\nconst rules = computed(() => ({\r\n    id: { required },\r\n    fullname: { required },\r\n    numberOfFloors: { required },\r\n    roomsOnFloor: { required },\r\n    address: { required },\r\n    buildingObjectId: { required },\r\n    regionId: { required },\r\n    districtId: { required },\r\n    stateId: { required }\r\n}));\r\n\r\nconst v$ = useVuelidate(rules, state);\r\n\r\nconst {\r\n    data: regions,\r\n    isSuccess: isSuccessRegions,\r\n    isLoading: isLoadingRegions\r\n} = await useQuery({\r\n    queryKey: [\"regions\"],\r\n    queryFn: () => manualGetRegions(),\r\n    enabled: isShow\r\n});\r\n\r\nconst valueRegion = computed(() => state.value.regionId);\r\n\r\nconst isEnabled = computed(() => !!valueRegion.value.length);\r\n\r\nwatch(valueRegion, () => {\r\n    if (!isFirstChange.value && !isSubmit.value) {\r\n        state.value.districtId = [];\r\n    }\r\n\r\n    isFirstChange.value = false;\r\n}, { immediate: true });\r\n\r\nconst {\r\n    data: districts,\r\n    isSuccess: isSuccessDistricts,\r\n    isLoading: isLoadingDistricts\r\n} = await useQuery({\r\n    queryKey: [\"districts\", { districtId: valueRegion }],\r\n    queryFn: () => manualGetDistricts(valueRegion.value),\r\n    enabled: isEnabled\r\n});\r\n\r\nconst {\r\n    data: objectsList,\r\n    isSuccess: isSuccessObjectsList,\r\n    isLoading: isLoadingObjectsList\r\n} = await useQuery({\r\n    queryKey: [\"objectsList\", { organizationId: user.value.user.organizationId }],\r\n    queryFn: () => manualGetObjects(),\r\n    enabled: isShow\r\n});\r\n\r\nconst {\r\n    data: states,\r\n    isSuccess: isSuccessStates,\r\n    isLoading: isLoadingStates\r\n} = await useQuery({\r\n    queryKey: [\"states\"],\r\n    queryFn: () => manualGetStates(),\r\n    enabled: isShow\r\n});\r\n\r\nconst inputs = ref([\r\n    { \r\n        id: 1, \r\n        model: \"fullname\", \r\n        label: \"blocksFullNameLabel\", \r\n        placeholder: \"blocksFullNamePlaceholder\", \r\n        icon: \"input-company\", \r\n        errorKey: \"fullname\",\r\n    },\r\n    { \r\n        id: 2, \r\n        model: \"numberOfFloors\", \r\n        label: \"blocksNumberLabel\", \r\n        placeholder: \"blocksNumberPlaceholder\", \r\n        icon: \"signature\", \r\n        errorKey: \"numberOfFloors\",\r\n    },\r\n    { \r\n        id: 3, \r\n        model: \"roomsOnFloor\", \r\n        label: \"blocksRoomsLabel\", \r\n        placeholder: \"blocksRoomsPlaceholder\", \r\n        icon: \"door\", \r\n        errorKey: \"roomsOnFloor\",\r\n    },\r\n    { \r\n        id: 4, \r\n        model: \"address\", \r\n        label: \"blocksAddressLabel\",\r\n        placeholder: \"blocksAddressPlaceholder\", \r\n        icon: \"address\", \r\n        errorKey: \"address\",\r\n    }\r\n]);\r\n\r\nconst selects = ref([\r\n    { \r\n        id: 1, \r\n        model: \"buildingObjectId\", \r\n        label: \"buildIdBlocksLabel\", \r\n        placeholder: \"buildIdBlocksPlaceholder\",\r\n        errorKey: \"buildingObjectId\", \r\n        options: objectsList, \r\n        success: isSuccessObjectsList,\r\n        loading: isLoadingObjectsList\r\n    },\r\n    { \r\n        id: 2, \r\n        model: \"regionId\", \r\n        label: \"regionBlocksLabel\", \r\n        placeholder: \"regionBlocksPlaceholder\",\r\n        errorKey: \"regionId\",\r\n        options: regions, \r\n        success: isSuccessRegions,\r\n        loading: isLoadingRegions\r\n    },\r\n    { \r\n        id: 3, \r\n        model: \"districtId\", \r\n        label: \"districtBlocksLabel\", \r\n        placeholder: \"districtBlocksPlaceholder\",\r\n        errorKey: \"districtId\", \r\n        options: districts, \r\n        success: isSuccessDistricts,\r\n        loading: isLoadingDistricts\r\n    },\r\n    { \r\n        id: 4, \r\n        model: \"stateId\", \r\n        label: \"stateBlocksLabel\", \r\n        placeholder: \"stateBlocksPlaceholder\",\r\n        errorKey: \"stateId\",\r\n        options: states,\r\n        success: isSuccessStates,\r\n        loading: isLoadingStates\r\n    }\r\n]);\r\n\r\nconst { isError } = await useQuery({\r\n    queryKey: [\"blocksById\", slugId],\r\n    queryFn: () => getWithId(\"building_block\", slugId.value),\r\n    select: (data) => {\r\n        state.value.id = data.id;\r\n        state.value.fullname = data.fullName;\r\n        state.value.numberOfFloors = data.numberOfFloors;\r\n        state.value.roomsOnFloor = data.roomsOnFloor;\r\n        state.value.address = data.address;\r\n        state.value.buildingObjectId = [data.buildingObjectId];\r\n        state.value.regionId = [data.regionId];\r\n        state.value.districtId = [data.districtId];\r\n        state.value.stateId = [data.stateId];\r\n\r\n        isFirstChange.value = true;\r\n    },\r\n    enabled: isShow\r\n});\r\n\r\nwatch(isError, (value) => {\r\n    if (value) {\r\n        router.push(routes.HOME.path);\r\n    }\r\n});\r\n\r\nconst { mutate: updateMutate } = useMutation({\r\n    onMutate: (body) => {\r\n        isSubmit.value = true;\r\n        \r\n        body.buildingObjectId = body.buildingObjectId[0];\r\n        body.regionId = body.regionId[0];\r\n        body.districtId = body.districtId[0];\r\n        body.stateId = body.stateId[0];\r\n    },\r\n    mutationFn: (body) => updateById(\"building_block\", body),\r\n    onSuccess: () => {\r\n        queryClient.invalidateQueries({ queryKey: [\"blocks\"] });\r\n        queryClient.invalidateQueries({ queryKey: [\"blocksById\", slugId] });\r\n        queryClient.invalidateQueries({ queryKey: [\"blocksList\"] });\r\n\r\n        router.push(routes.BLOCK.path);\r\n        // setTimeout(() => toast.success(t(\"updateToast\")), 1000);\r\n    }\r\n});\r\n\r\nconst submitHandler = async () => {\r\n    v$.value.$validate();\r\n\r\n    if (v$.value.$errors.length) {\r\n        return;\r\n    }\r\n\r\n    updateMutate(state.value);\r\n    v$.value.$reset();\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>"],"names":["queryClient","useQueryClient","router","useRouter","route","useRoute","useToast","useI18n","slugId","ref","userStore","useUserStore","user","storeToRefs","isShow","computed","_b","_a","actionModules","isSubmit","isFirstChange","state","rules","required","v$","useVuelidate","regions","isSuccessRegions","isLoadingRegions","__temp","__restore","_withAsyncContext","useQuery","manualGetRegions","valueRegion","isEnabled","watch","districts","isSuccessDistricts","isLoadingDistricts","manualGetDistricts","objectsList","isSuccessObjectsList","isLoadingObjectsList","manualGetObjects","states","isSuccessStates","isLoadingStates","manualGetStates","inputs","selects","isError","getWithId","data","value","routes","updateMutate","useMutation","body","updateById","submitHandler"],"mappings":"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"}