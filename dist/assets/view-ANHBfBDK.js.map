{"version":3,"file":"view-ANHBfBDK.js","sources":["../../src/views/application/view.vue"],"sourcesContent":["<template>\r\n    <section class=\"manage section-height shadowed\" v-if=\"isShow\">\r\n        <div class=\"manage__inner section-padding\">\r\n            <ManageHead \r\n                title=\"addNewApplicationTitle\" \r\n                :to=\"routes.APPLICATION.path\"\r\n            />\r\n            <form class=\"manage__form\" @submit.prevent>\r\n                <div class=\"manage__overlay\">\r\n                    <FormInput \r\n                        v-for=\"input in inputs\"\r\n                        :key=\"input.id\"\r\n                        v-model=\"state[input.model]\"\r\n                        :width=\"500\" \r\n                        :placeholder=\"$t(input.placeholder)\"\r\n                        :name=\"input.icon\"\r\n                        :type=\"input?.type\"\r\n                        :isDisabled=\"true\"\r\n                    >\r\n                        {{ $t(input.label) }}\r\n                    </FormInput>\r\n                    <FormSelect \r\n                        v-for=\"select in selects\"\r\n                        :key=\"select.id\"\r\n                        v-model=\"state[select.model]\" \r\n                        :width=\"500\" \r\n                        :options=\"select.options\"\r\n                        :placeholder=\"select?.placeholder\"\r\n                        :success=\"select.success\"\r\n                        :loading=\"select.loading\"\r\n                        :isMultiSelect=\"select?.multiple\"\r\n                        :isDisabled=\"true\"\r\n                    >\r\n                        {{ $t(select.label) }}\r\n                    </FormSelect>\r\n                </div>\r\n                <SubTable\r\n                    v-if=\"isSuccessCosts && isSuccessMaterials && isSuccessFloors && state.applicationTables.length\"\r\n                    :headers=\"headers\"\r\n                    :table=\"state.applicationTables\"\r\n                />\r\n                <Spinner v-if=\"isLoadingCosts || isLoadingMaterials || isLoadingFloors || !state.applicationTables.length\" />\r\n                <FormTextarea \r\n                    v-for=\"input in textareas\"\r\n                    :key=\"input.id\"\r\n                    v-model=\"state[input.model]\"\r\n                    :width=\"500\" \r\n                    :placeholder=\"$t(input.placeholder)\"\r\n                    :isDisabled=\"true\"\r\n                >\r\n                    {{ $t(input.label) }}\r\n                </FormTextarea>\r\n                <div \r\n                    class=\"manage__triggers\" \r\n                    v-if=\"(isSuccessCosts && isSuccessMaterials && isSuccessFloors) && (state.statusId !== 7 && state.statusId !== 15)\"\r\n                >\r\n                    <MyButton \r\n                        v-if=\"user?.user?.modules?.includes(actionModules.APPLICATION.CONFIRM)\"\r\n                        icon=\"approve\" \r\n                        type=\"submit\" \r\n                        color=\"green\" \r\n                        :width=\"180\" \r\n                        @click=\"acceptHandler\"\r\n                    >\r\n                        {{ $t(\"acceptButton\") }}\r\n                    </MyButton>\r\n                    <MyButton \r\n                        v-if=\"user?.user?.modules?.includes(actionModules.APPLICATION.REFUSAL)\"\r\n                        icon=\"refusal\" \r\n                        type=\"submit\" \r\n                        color=\"red\" \r\n                        :width=\"180\" \r\n                        @click=\"cancelHandler\"\r\n                    >\r\n                        {{ $t(\"cancelButton\") }}\r\n                    </MyButton>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, watch } from \"vue\";\r\nimport FormTextarea from \"@/components/FormTextarea.vue\";\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport { storeToRefs } from \"pinia\";\r\nimport { useUserStore } from \"@/store/userStore\";\r\nimport { useToast } from \"vue-toastification\";\r\nimport { useI18n } from \"vue-i18n\";\r\nimport { useQueryClient, useQuery, useMutation } from \"@tanstack/vue-query\";\r\nimport { getWithId, cancelWithId, acceptWithId } from \"@/services/crud.services.js\";\r\nimport { \r\n    manualConstructionMaterial, \r\n    manualGetFloors, \r\n    manualGetCost, \r\n    manualGetObjects, \r\n    manualGetBlocks,\r\n    manualGetRoles\r\n} from \"@/services/manual.services.js\";\r\nimport { routes } from \"@/utils/routes.js\";\r\nimport { actionModules } from \"@/utils/action-modules.js\";\r\nimport { createIdMap } from \"@/utils/secondary-functions.js\";\r\n\r\nconst queryClient = useQueryClient();\r\nconst router = useRouter();\r\nconst route = useRoute();\r\nconst toast = useToast();\r\nconst { t } = useI18n();\r\n\r\nconst slugId = ref(route.params.id);\r\n\r\nconst userStore = useUserStore();\r\nconst { user } = storeToRefs(userStore);\r\n\r\nconst isShow = computed(() => !!user?.value.user?.modules?.includes(actionModules.APPLICATION.READ));\r\n\r\nconst headers = ref([\r\n    { id: 1, label: \"appFloor\", width: 215 },\r\n    { id: 2, label: \"appMaterial\", width: 290 },\r\n    { id: 3, label: \"appCount\", width: 250 },\r\n    { id: 4, label: \"appPrice\", width: 300 },\r\n    { id: 5, label: \"appCost\" }\r\n]);\r\n\r\nconst state = ref({\r\n    id: \"\",\r\n    deadline: \"\",\r\n    buildingObjectId: [],\r\n    buildingBlockId: [],\r\n    roleIds: [],\r\n    applicationTables: [],\r\n    details: \"\",\r\n    statusId: \"\"\r\n});\r\n\r\nconst {\r\n    data: roles,\r\n    isSuccess: isSuccessRoles,\r\n    isLoading: isLoadingRoles\r\n} = await useQuery({\r\n    queryKey: [\"rolesList\", { organizationId: user.value.user.organizationId }],\r\n    queryFn: () => manualGetRoles(),\r\n    enabled: isShow\r\n});\r\n\r\nconst {\r\n    data: objects,\r\n    isSuccess: isSuccessObjects,\r\n    isLoading: isLoadingObjects\r\n} = await useQuery({\r\n    queryKey: [\"objectsList\", { organizationId: user.value.user.organizationId }],\r\n    queryFn: () => manualGetObjects(),\r\n    enabled: isShow\r\n});\r\n\r\nconst valueObject = computed(() => state.value.buildingObjectId);\r\n\r\nconst isEnabledBlocks = computed(() => !!valueObject.value.length);\r\n\r\nconst {\r\n    data: blocks,\r\n    isSuccess: isSuccessBlocks,\r\n    isLoading: isLoadingBlocks\r\n} = await useQuery({\r\n    queryKey: [\"blocksList\", { blockId: valueObject }],\r\n    queryFn: () => manualGetBlocks(valueObject.value),\r\n    enabled: isEnabledBlocks\r\n});\r\n\r\nconst valueBlock = computed(() => state.value.buildingBlockId);\r\n\r\nconst isEnabled = computed(() => !!valueBlock.value.length);\r\n\r\nconst {\r\n    data: floors,\r\n    isSuccess: isSuccessFloors,\r\n    isLoading: isLoadingFloors\r\n} = await useQuery({\r\n    queryKey: [\"floorsList\", { floorId: valueBlock }],\r\n    queryFn: () => manualGetFloors(valueBlock.value),\r\n    enabled: isEnabled\r\n});\r\n\r\nconst {\r\n    data: costs,\r\n    isSuccess: isSuccessCosts,\r\n    isLoading: isLoadingCosts\r\n} = await useQuery({\r\n    queryKey: [\"costsList\", { organizationId: user.value.user.organizationId }],\r\n    queryFn: () => manualGetCost(),\r\n    enabled: isEnabled\r\n});\r\n\r\nconst {\r\n    data: materials,\r\n    isSuccess: isSuccessMaterials,\r\n    isLoading: isLoadingMaterials\r\n} = await useQuery({\r\n    queryKey: [\"materialsList\", { organizationId: user.value.user.organizationId }],\r\n    queryFn: () => manualConstructionMaterial(),\r\n    enabled: isEnabled\r\n});\r\n\r\nconst inputs = ref([\r\n    { \r\n        id: 1, \r\n        model: \"deadline\", \r\n        label: \"dateAppLabel\", \r\n        placeholder: \"dateAppPlaceholder\", \r\n        icon: \"date\",\r\n        errorKey: \"deadline\",\r\n        type: \"date\"\r\n    }\r\n]);\r\n\r\nconst selects = ref([\r\n    { \r\n        id: 1, \r\n        model: \"buildingObjectId\", \r\n        label: \"objectAppLabel\", \r\n        placeholder: \"objectAppPlaceholder\",\r\n        errorKey: \"buildingObjectId\",\r\n        options: objects,\r\n        success: isSuccessObjects,\r\n        loading: isLoadingObjects\r\n    },\r\n    { \r\n        id: 2, \r\n        model: \"buildingBlockId\", \r\n        label: \"blockAppLabel\", \r\n        placeholder: \"blockAppPlaceholder\",\r\n        errorKey: \"buildingBlockId\",\r\n        options: blocks,\r\n        success: isSuccessBlocks,\r\n        loading: isLoadingBlocks\r\n    },\r\n    { \r\n        id: 6, \r\n        model: \"roleIds\", \r\n        label: \"appRoleLabel\", \r\n        placeholder: \"appRolePlaceholder\", \r\n        errorKey: \"roleIds\", \r\n        options: roles, \r\n        success: isSuccessRoles,\r\n        loading: isLoadingRoles,\r\n        multiple: true\r\n    }\r\n]);\r\n\r\nconst textareas = ref([\r\n    { \r\n        id: 1, \r\n        model: \"details\", \r\n        label: \"appCommentLabel\", \r\n        placeholder: \"appCommentPlaceholder\",\r\n        errorKey: \"details\"\r\n    }\r\n]);\r\n\r\nconst { isError } = await useQuery({\r\n    queryKey: [\"applicationsById\", slugId],\r\n    queryFn: () => getWithId(\"application\", slugId.value),\r\n    select: (data) => {\r\n        state.value.id = data.id;\r\n        state.value.deadline = data.deadline;\r\n        state.value.buildingObjectId = [data.buildingObjectId];\r\n        state.value.buildingBlockId = [data.buildingBlockId];\r\n        state.value.roleIds = [...data.roleIds];\r\n        state.value.applicationTables = [...data.applicationTables];\r\n        state.value.details = data.details;\r\n        state.value.statusId = data.statusId;\r\n    },\r\n    enabled: isShow\r\n});\r\n\r\nconst floorMap = computed(() => createIdMap(floors.value || []));\r\nconst costMap = computed(() => createIdMap(costs.value || []));\r\nconst materialMap = computed(() => createIdMap(materials.value || []));\r\n\r\nconst getFloorIdValue = (elem) => floorMap.value[elem.floorId]?.name;\r\nconst getCostIdValue = (elem) => costMap.value[elem.costId]?.name;\r\nconst getConstructionMaterialIdValue = (elem) => materialMap.value[elem?.constructionMaterialId]?.name;\r\n\r\nconst isNotAllEmptyData = computed(() => Object.keys(floorMap.value).length && Object.keys(costMap.value).length && Object.keys(materialMap.value).length);\r\n\r\nwatch(isNotAllEmptyData, (newValue) => {\r\n    if (!!newValue) {\r\n        state.value.applicationTables = state.value.applicationTables.map((elem) => {\r\n            const object = { \r\n                ...elem,\r\n                floorValue: getFloorIdValue(elem),\r\n                costValue: getCostIdValue(elem),\r\n                constructionMaterialValue: getConstructionMaterialIdValue(elem)\r\n            };\r\n\r\n            return object;\r\n        });\r\n    }\r\n}, { immediate: true });\r\n\r\nwatch(isError, (value) => {\r\n    if (value) {\r\n        router.push(routes.HOME.path);\r\n    }\r\n});\r\n\r\nconst { mutate: cancelMutate } = useMutation({\r\n    mutationFn: (idx) => cancelWithId(\"application\", idx),\r\n    onSuccess: () => {\r\n        queryClient.invalidateQueries({ queryKey: [\"applications\"] });\r\n        queryClient.invalidateQueries({ queryKey: [\"applicationsById\", slugId] });\r\n\r\n        router.push(routes.APPLICATION.path);\r\n    }\r\n});\r\n\r\nconst { mutate: acceptMutate } = useMutation({\r\n    mutationFn: (idx) => acceptWithId(\"application\", idx),\r\n    onSuccess: () => {\r\n        queryClient.invalidateQueries({ queryKey: [\"applications\"] });\r\n        queryClient.invalidateQueries({ queryKey: [\"applicationsById\", slugId] });\r\n\r\n        router.push(routes.APPLICATION.path);\r\n    }\r\n});\r\n\r\nconst cancelHandler = () => {\r\n    cancelMutate(slugId.value);\r\n}\r\n\r\nconst acceptHandler = () => {\r\n    acceptMutate(slugId.value);\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.manage {\r\n    &__overlay {\r\n        display: grid;\r\n        grid-template-columns: repeat(3, 1fr);\r\n        gap: 30px 50px;\r\n        margin-top: 20px;\r\n        margin-bottom: 50px;\r\n        @media (max-width: 1536px) {\r\n            gap: 20px;\r\n        }\r\n        @media (max-width: 1152px) {\r\n            grid-template-columns: repeat(2, 1fr);\r\n        }\r\n        @media (max-width: 864px) {\r\n            display: flex;\r\n            flex-direction: column;\r\n            align-items: center;\r\n        }\r\n    }\r\n    &__triggers {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 30px;\r\n        margin-top: 30px;\r\n    }\r\n}\r\n</style>"],"names":["queryClient","useQueryClient","router","useRouter","route","useRoute","useToast","useI18n","slugId","ref","userStore","useUserStore","user","storeToRefs","isShow","computed","_b","_a","actionModules","headers","state","roles","isSuccessRoles","isLoadingRoles","__temp","__restore","_withAsyncContext","useQuery","manualGetRoles","objects","isSuccessObjects","isLoadingObjects","manualGetObjects","valueObject","isEnabledBlocks","blocks","isSuccessBlocks","isLoadingBlocks","manualGetBlocks","valueBlock","isEnabled","floors","isSuccessFloors","isLoadingFloors","manualGetFloors","costs","isSuccessCosts","isLoadingCosts","manualGetCost","materials","isSuccessMaterials","isLoadingMaterials","manualConstructionMaterial","inputs","selects","textareas","isError","getWithId","data","floorMap","createIdMap","costMap","materialMap","getFloorIdValue","elem","getCostIdValue","getConstructionMaterialIdValue","isNotAllEmptyData","watch","newValue","value","routes","cancelMutate","useMutation","idx","cancelWithId","acceptMutate","acceptWithId","cancelHandler","acceptHandler"],"mappings":"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"}