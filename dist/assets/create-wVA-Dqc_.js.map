{"version":3,"file":"create-wVA-Dqc_.js","sources":["../../src/views/role/create.vue"],"sourcesContent":["<template>\r\n    <section class=\"manage section-height shadowed\" v-if=\"isShow\">\r\n        <div class=\"manage__inner section-padding\">\r\n            <ManageHead \r\n                title=\"addNewRolesTitle\" \r\n                :to=\"routes.ROLE.path\"\r\n            />\r\n            <form class=\"manage__form form-manage\" @submit.prevent=\"submitHandler\">\r\n                <FormInput \r\n                    v-for=\"input in inputs\"\r\n                    :key=\"input.id\"\r\n                    v-model=\"state[input.model]\"\r\n                    :width=\"500\" \r\n                    :placeholder=\"$t(input.placeholder)\"\r\n                    :name=\"input.icon\"\r\n                    :error=\"v$?.[input.errorKey]?.$error\" \r\n                    :textError=\"v$?.[input.errorKey]?.$errors[0]?.$message\"\r\n                >\r\n                    {{ $t(input.label) }}\r\n                </FormInput>\r\n                <ActionsModules \r\n                    v-if=\"isSuccessModules\"\r\n                    v-model=\"state.roleModules\"\r\n                    :actions=\"modules\"\r\n                />\r\n                <CustomButton \r\n                    v-if=\"isSuccessModules\"\r\n                    :className=\"`form__submit manage__submit ${v$?.fullName.$errors[0]?.$message ? 'centered' : ''}`\"\r\n                >\r\n                    {{ $t(\"formButton\") }}\r\n                </CustomButton>\r\n            </form>\r\n            <Spinner v-if=\"isLoadingModules\" />\r\n        </div>\r\n    </section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport { storeToRefs } from \"pinia\";\r\nimport { useUserStore } from \"@/store/userStore\";\r\nimport { useVuelidate } from \"@vuelidate/core\";\r\nimport { useToast } from \"vue-toastification\";\r\nimport { useI18n } from \"vue-i18n\";\r\nimport { required } from \"@/utils/i18n-validators.js\";\r\nimport { \r\n    useQueryClient, \r\n    useQuery, \r\n    useMutation \r\n} from \"@tanstack/vue-query\";\r\nimport { create } from \"@/services/crud.services.js\";\r\nimport { manualGetModules } from \"@/services/manual.services.js\";\r\nimport { routes } from \"@/utils/routes.js\";\r\nimport { actionModules } from \"@/utils/action-modules.js\";\r\n\r\nconst queryClient = useQueryClient();\r\nconst router = useRouter();\r\nconst toast = useToast();\r\nconst { t } = useI18n();\r\n\r\nconst userStore = useUserStore();\r\nconst { user } = storeToRefs(userStore);\r\n\r\nconst isShow = computed(() => !!user?.value.user?.modules?.includes(actionModules.ROLE.CREATE));\r\n\r\nconst state = ref({\r\n    shortName: \"\",\r\n    fullName: \"\",\r\n    roleModules: []\r\n});\r\n\r\nconst rules = computed(() => ({\r\n    shortName: { required },\r\n    fullName: { required }\r\n}));\r\n\r\nconst v$ = useVuelidate(rules, state);\r\n\r\nconst {\r\n    data: modules,\r\n    isLoading: isLoadingModules,\r\n    isSuccess: isSuccessModules\r\n} = await useQuery({\r\n    queryKey: [\"modules\"],\r\n    queryFn: () => manualGetModules(),\r\n    enabled: isShow\r\n});\r\n\r\nconst inputs = ref([\r\n    { \r\n        id: 1, \r\n        model: \"fullName\", \r\n        label: \"fullNameRoleLabel\", \r\n        placeholder: \"fullNameRolePlaceholder\", \r\n        icon: \"role\",\r\n        errorKey: \"fullName\",\r\n    },\r\n    { \r\n        id: 2, \r\n        model: \"shortName\", \r\n        label: \"shortNameRoleLabel\", \r\n        placeholder: \"shortNameRolePlaceholder\", \r\n        icon: \"role\",\r\n        errorKey: \"shortName\",\r\n    },\r\n]);\r\n\r\nconst { mutate: createMutate } = useMutation({\r\n    mutationFn: (body) => create(\"Role\", body),\r\n    onSuccess: () => {\r\n        queryClient.invalidateQueries({ queryKey: [\"roles\"] });\r\n        queryClient.invalidateQueries({ queryKey: [\"rolesList\"] });\r\n        \r\n        router.push(routes.ROLE.path);\r\n    }\r\n});\r\n\r\nconst submitHandler = () => {\r\n    v$.value.$validate();\r\n\r\n    if (v$.value.$errors.length) {\r\n        return;\r\n    }\r\n\r\n    createMutate(state.value);\r\n    v$.value.$reset();\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n</style>"],"names":["queryClient","useQueryClient","router","useRouter","useToast","useI18n","userStore","useUserStore","user","storeToRefs","isShow","computed","_b","_a","actionModules","state","ref","rules","required","v$","useVuelidate","modules","isLoadingModules","isSuccessModules","__temp","__restore","_withAsyncContext","useQuery","manualGetModules","inputs","createMutate","useMutation","body","create","routes","submitHandler"],"mappings":"imBAwDA,MAAMA,EAAcC,GAAc,EAC5BC,EAASC,GAAS,EACVC,EAAW,EACXC,EAAU,EAExB,MAAMC,EAAYC,EAAY,EACxB,CAAE,KAAAC,CAAM,EAAGC,EAAYH,CAAS,EAEhCI,EAASC,EAAS,IAAA,SAAM,OAAC,GAACC,GAAAC,EAAAL,GAAA,YAAAA,EAAM,MAAM,OAAZ,YAAAK,EAAkB,UAAlB,MAAAD,EAA2B,SAASE,GAAc,KAAK,SAAO,EAExFC,EAAQC,EAAI,CACd,UAAW,GACX,SAAU,GACV,YAAa,CAAE,CACnB,CAAC,EAEKC,EAAQN,EAAS,KAAO,CAC1B,UAAW,CAAE,SAAAO,CAAU,EACvB,SAAU,CAAE,SAAAA,CAAU,CAC1B,EAAE,EAEIC,EAAKC,GAAaH,EAAOF,CAAK,EAE9B,CACF,KAAMM,EACN,UAAWC,EACX,UAAWC,CACf,GAAU,CAAAC,EAAAC,CAAA,EAAAC,EAAA,IAAAC,GAAS,CACf,SAAU,CAAC,SAAS,EACpB,QAAS,IAAMC,GAAkB,EACjC,QAASlB,CACb,CAAC,CAAA,mBAEKmB,EAASb,EAAI,CACf,CACI,GAAI,EACJ,MAAO,WACP,MAAO,oBACP,YAAa,0BACb,KAAM,OACN,SAAU,UACb,EACD,CACI,GAAI,EACJ,MAAO,YACP,MAAO,qBACP,YAAa,2BACb,KAAM,OACN,SAAU,WACb,CACL,CAAC,EAEK,CAAE,OAAQc,CAAc,EAAGC,GAAY,CACzC,WAAaC,GAASC,GAAO,OAAQD,CAAI,EACzC,UAAW,IAAM,CACbhC,EAAY,kBAAkB,CAAE,SAAU,CAAC,OAAO,CAAG,CAAA,EACrDA,EAAY,kBAAkB,CAAE,SAAU,CAAC,WAAW,CAAG,CAAA,EAEzDE,EAAO,KAAKgC,EAAO,KAAK,IAAI,CAC/B,CACL,CAAC,EAEKC,EAAgB,IAAM,CACxBhB,EAAG,MAAM,YAEL,CAAAA,EAAG,MAAM,QAAQ,SAIrBW,EAAaf,EAAM,KAAK,EACxBI,EAAG,MAAM,SACb"}