{"version":3,"file":"index-nh0BgeUl.js","sources":["../../src/views/products/index.vue"],"sourcesContent":["<template>\r\n    <section class=\"products\">\r\n        <div class=\"products__inner section-padding\">\r\n            <HeadPage \r\n                title=\"productsTitle\" \r\n                :to=\"routes.CREATE_PRODUCTS.path\"\r\n                @onSearch=\"($event) => setSearchValue($event)\"\r\n            />\r\n            <Table \r\n                v-if=\"isSuccessProducts && products?.count\"\r\n                :headers=\"headers\" \r\n                :table=\"products?.constructionMaterial\"\r\n                :to=\"routes.UPDATE_PRODUCTS.name\"\r\n                :options=\"{ page, limit }\"\r\n                @onActionDelete=\"deleteHandler\"\r\n            />\r\n            <Pagination\r\n                :count=\"products?.count\"\r\n                :isSucces=\"isSuccessProducts\"\r\n            />\r\n            <Spinner v-if=\"isLoadingProducts\" />\r\n            <div \r\n                v-if=\"(isSuccessProducts && !products?.count) || isError\" \r\n                class=\"empty-table shadowed\"\r\n            >\r\n                {{ $t(\"emptyTableTitle\") }}\r\n            </div>\r\n        </div>\r\n    </section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, watch, onMounted } from \"vue\";\r\nimport { storeToRefs } from \"pinia\";\r\nimport { useTableStore } from \"@/store/tableStore\";\r\nimport { refDebounced } from \"@vueuse/core\";\r\nimport { useQueryClient, useQuery, useMutation } from \"@tanstack/vue-query\";\r\nimport { getList, deleteWithId } from \"@/services/crud.services.js\";\r\nimport { routes } from \"@/utils/routes.js\";\r\n\r\nconst queryClient = useQueryClient();\r\n\r\nconst tableStore = useTableStore();\r\nconst { setSearchValue, setPagePagination } = tableStore;\r\nconst { page, limit, search } = storeToRefs(tableStore);\r\n\r\nconst organizationId = ref(localStorage.getItem(\"organizationId\"));\r\n\r\nonMounted(() => {\r\n    setSearchValue(\"\");\r\n});\r\n\r\nwatch(search, () => {\r\n    setPagePagination(1);\r\n});\r\n\r\nconst productsId = ref(\"\");\r\n\r\nconst debouncedSearch = refDebounced(search, 500);\r\n\r\nconst headers = ref([\r\n    { id: 1, label: \"productsName\", width: 725 },\r\n    { id: 4, label: \"productsState\" },\r\n    { id: 5, label: \"productsAction\" }\r\n]);\r\n\r\nconst {\r\n    data: products,\r\n    isLoading: isLoadingProducts,\r\n    isSuccess: isSuccessProducts,\r\n    isError\r\n} = await useQuery({\r\n    queryKey: [\"products\", { page, limit, debouncedSearch, organizationId }],\r\n    queryFn: () => getList(\"construction_material\", page.value, limit.value, debouncedSearch.value, { organizationId: organizationId.value }),\r\n    select: (data) => {\r\n        let productsList = [...data?.constructionMaterial];\r\n\r\n        productsList = productsList.map((elem) => {\r\n            const product = {\r\n                ...elem\r\n            }\r\n\r\n            delete product.organizationName;\r\n\r\n            return product;\r\n        })\r\n\r\n        return {\r\n            constructionMaterial: productsList,\r\n            count: data?.count\r\n        }\r\n    }\r\n});\r\n\r\nconst { mutate: mutateDelete } = useMutation({\r\n    mutationFn: (idx) => deleteWithId(\"construction_material\", idx),\r\n    onSuccess: () => {\r\n        queryClient.invalidateQueries({ queryKey: [\"products\"] });\r\n        queryClient.invalidateQueries({ queryKey: [\"productsById\", productsId] });\r\n    }\r\n});\r\n\r\nconst deleteHandler = async (idx) => {\r\n    productsId.value = idx;\r\n    mutateDelete(idx);\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>"],"names":["queryClient","useQueryClient","tableStore","useTableStore","setSearchValue","setPagePagination","page","limit","search","storeToRefs","organizationId","ref","onMounted","watch","productsId","debouncedSearch","refDebounced","headers","products","isLoadingProducts","isSuccessProducts","isError","__temp","__restore","_withAsyncContext","useQuery","getList","data","productsList","elem","product","mutateDelete","useMutation","idx","deleteWithId","deleteHandler"],"mappings":"0eAwCA,MAAMA,EAAcC,EAAc,EAE5BC,EAAaC,EAAa,EAC1B,CAAE,eAAAC,EAAgB,kBAAAC,CAAmB,EAAGH,EACxC,CAAE,KAAAI,EAAM,MAAAC,EAAO,OAAAC,CAAQ,EAAGC,EAAYP,CAAU,EAEhDQ,EAAiBC,EAAI,aAAa,QAAQ,gBAAgB,CAAC,EAEjEC,EAAU,IAAM,CACZR,EAAe,EAAE,CACrB,CAAC,EAEDS,EAAML,EAAQ,IAAM,CAChBH,EAAkB,CAAC,CACvB,CAAC,EAED,MAAMS,EAAaH,EAAI,EAAE,EAEnBI,EAAkBC,EAAaR,EAAQ,GAAG,EAE1CS,EAAUN,EAAI,CAChB,CAAE,GAAI,EAAG,MAAO,eAAgB,MAAO,GAAK,EAC5C,CAAE,GAAI,EAAG,MAAO,eAAiB,EACjC,CAAE,GAAI,EAAG,MAAO,gBAAkB,CACtC,CAAC,EAEK,CACF,KAAMO,EACN,UAAWC,EACX,UAAWC,EACX,QAAAC,CACJ,GAAU,CAAAC,EAAAC,CAAA,EAAAC,EAAA,IAAAC,EAAS,CACf,SAAU,CAAC,WAAY,CAAE,KAAAnB,EAAM,MAAAC,EAAO,gBAAAQ,EAAiB,eAAAL,EAAgB,EACvE,QAAS,IAAMgB,EAAQ,wBAAyBpB,EAAK,MAAOC,EAAM,MAAOQ,EAAgB,MAAO,CAAE,eAAgBL,EAAe,KAAK,CAAE,EACxI,OAASiB,GAAS,CACd,IAAIC,EAAe,CAAC,GAAGD,GAAA,YAAAA,EAAM,oBAAoB,EAEjD,OAAAC,EAAeA,EAAa,IAAKC,GAAS,CACtC,MAAMC,EAAU,CACZ,GAAGD,CACN,EAED,cAAOC,EAAQ,iBAERA,CACnB,CAAS,EAEM,CACH,qBAAsBF,EACtB,MAAOD,GAAA,YAAAA,EAAM,KAChB,CACJ,CACL,CAAC,CAAA,mBAEK,CAAE,OAAQI,CAAc,EAAGC,EAAY,CACzC,WAAaC,GAAQC,EAAa,wBAAyBD,CAAG,EAC9D,UAAW,IAAM,CACbjC,EAAY,kBAAkB,CAAE,SAAU,CAAC,UAAU,CAAG,CAAA,EACxDA,EAAY,kBAAkB,CAAE,SAAU,CAAC,eAAgBc,CAAU,CAAC,CAAE,CAC3E,CACL,CAAC,EAEKqB,EAAgB,MAAOF,GAAQ,CACjCnB,EAAW,MAAQmB,EACnBF,EAAaE,CAAG,CACpB"}