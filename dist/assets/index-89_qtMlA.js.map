{"version":3,"file":"index-89_qtMlA.js","sources":["../../src/views/blocks/index.vue"],"sourcesContent":["<template>\r\n    <section class=\"blocks section-height\">\r\n        <div class=\"blocks__inner section-padding\">\r\n            <HeadPage \r\n                title=\"blockTitle\" \r\n                :to=\"routes.CREATE_BLOCKS.path\"\r\n                @onSearch=\"($event) => search = $event\"\r\n            />\r\n            <Table \r\n                v-if=\"isSuccessBlocks && blocks.length\"\r\n                :headers=\"headers\" \r\n                :table=\"blocks\"\r\n                :to=\"routes.UPDATE_BLOCKS.name\"\r\n                @onActionDelete=\"deleteHandler\"\r\n            />\r\n            <Spinner v-if=\"isLoadingBlocks\" />\r\n            <div \r\n                v-if=\"(isSuccessBlocks && !blocks.length) || isError\" \r\n                class=\"empty-table\"\r\n            >\r\n                {{ $t(\"emptyTableTitle\") }}\r\n            </div>\r\n        </div>\r\n    </section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\nimport { useQueryClient, useQuery, useMutation } from \"@tanstack/vue-query\";\r\nimport { getList, deleteWithId } from \"@/services/crud.services.js\";\r\nimport { routes } from \"@/utils/routes.js\";\r\n\r\nconst queryClient = useQueryClient();\r\n\r\nconst search = ref(\"\");\r\nconst blocksId = ref(\"\");\r\n\r\nconst headers = ref([\r\n    { id: 1, label: \"blockName\", width: 185 },\r\n    { id: 2, label: \"blockObject\", width: 205 },\r\n    { id: 3, label: \"blockOrganization\", width: 260 },\r\n    { id: 4, label: \"blockFloors\", width: 230 },\r\n    { id: 5, label: \"blockRooms\", width: 235 },\r\n    { id: 6, label: \"blockAddress\", width: 150 },\r\n    { id: 7, label: \"blockState\", width: 140 },\r\n    { id: 8, label: \"blockAction\", width: 125 }\r\n]);\r\n\r\nconst {\r\n    data: blocks,\r\n    isLoading: isLoadingBlocks,\r\n    isSuccess: isSuccessBlocks,\r\n    isError\r\n} = await useQuery({\r\n    queryKey: [\"blocks\"],\r\n    queryFn: () => getList(\"building_block\")\r\n});\r\n\r\nconst { mutate: mutateDelete } = useMutation({\r\n    mutationFn: (idx) => deleteWithId(\"building_block\", idx),\r\n    onSuccess: () => {\r\n        queryClient.invalidateQueries({ queryKey: [\"blocks\"] });\r\n        queryClient.invalidateQueries({ queryKey: [\"blocksById\", blocksId] });\r\n    }\r\n});\r\n\r\nconst deleteHandler = async (idx) => {\r\n    blocksId.value = idx;\r\n    mutateDelete(idx);\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>"],"names":["queryClient","useQueryClient","search","ref","blocksId","headers","blocks","isLoadingBlocks","isSuccessBlocks","isError","__temp","__restore","_withAsyncContext","useQuery","getList","mutateDelete","useMutation","idx","deleteWithId","deleteHandler"],"mappings":"0aAgCA,MAAMA,EAAcC,EAAc,EAE5BC,EAASC,EAAI,EAAE,EACfC,EAAWD,EAAI,EAAE,EAEjBE,EAAUF,EAAI,CAChB,CAAE,GAAI,EAAG,MAAO,YAAa,MAAO,GAAK,EACzC,CAAE,GAAI,EAAG,MAAO,cAAe,MAAO,GAAK,EAC3C,CAAE,GAAI,EAAG,MAAO,oBAAqB,MAAO,GAAK,EACjD,CAAE,GAAI,EAAG,MAAO,cAAe,MAAO,GAAK,EAC3C,CAAE,GAAI,EAAG,MAAO,aAAc,MAAO,GAAK,EAC1C,CAAE,GAAI,EAAG,MAAO,eAAgB,MAAO,GAAK,EAC5C,CAAE,GAAI,EAAG,MAAO,aAAc,MAAO,GAAK,EAC1C,CAAE,GAAI,EAAG,MAAO,cAAe,MAAO,GAAK,CAC/C,CAAC,EAEK,CACF,KAAMG,EACN,UAAWC,EACX,UAAWC,EACX,QAAAC,CACJ,GAAU,CAAAC,EAAAC,CAAA,EAAAC,EAAA,IAAAC,EAAS,CACf,SAAU,CAAC,QAAQ,EACnB,QAAS,IAAMC,EAAQ,gBAAgB,CAC3C,CAAC,CAAA,mBAEK,CAAE,OAAQC,CAAc,EAAGC,EAAY,CACzC,WAAaC,GAAQC,EAAa,iBAAkBD,CAAG,EACvD,UAAW,IAAM,CACbjB,EAAY,kBAAkB,CAAE,SAAU,CAAC,QAAQ,CAAG,CAAA,EACtDA,EAAY,kBAAkB,CAAE,SAAU,CAAC,aAAcI,CAAQ,CAAC,CAAE,CACvE,CACL,CAAC,EAEKe,EAAgB,MAAOF,GAAQ,CACjCb,EAAS,MAAQa,EACjBF,EAAaE,CAAG,CACpB"}