{"version":3,"file":"index-AuA5IOAB.js","sources":["../../src/views/applications/index.vue"],"sourcesContent":["<template>\r\n    <section class=\"applications\">\r\n        <div class=\"applications__inner\">\r\n            <HeadPage \r\n                title=\"applicationTitle\" \r\n                :to=\"routes.CREATE_APPLICATIONS.path\"\r\n                @onSearch=\"($event) => setSearchValue($event)\"\r\n            />\r\n            <Table \r\n                v-if=\"isSuccessApplications && applications?.count\"\r\n                :headers=\"headers\" \r\n                :table=\"applications?.applications\"\r\n                :to=\"routes.UPDATE_APPLICATIONS.name\"\r\n                :options=\"{ page, limit }\"\r\n                @onActionDelete=\"deleteHandler\"\r\n            />\r\n            <Pagination\r\n                :count=\"applications?.count\"\r\n                :isSucces=\"isSuccessApplications\"\r\n            />\r\n            <Spinner v-if=\"isLoadingApplications\" />\r\n            <div \r\n                v-if=\"(isSuccessApplications && !applications.count) || isError\"\r\n                class=\"empty-table shadowed\"\r\n            >\r\n                {{ $t(\"emptyTableTitle\") }}\r\n            </div>\r\n        </div>\r\n    </section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, watch, onMounted } from \"vue\";\r\nimport { storeToRefs } from \"pinia\";\r\nimport { useTableStore } from \"@/store/tableStore\";\r\nimport { refDebounced } from \"@vueuse/core\";\r\nimport { useQueryClient, useQuery, useMutation } from \"@tanstack/vue-query\";\r\nimport { getList, deleteWithId } from \"@/services/crud.services.js\";\r\nimport { routes } from \"@/utils/routes.js\";\r\n\r\nconst queryClient = useQueryClient();\r\n\r\nconst tableStore = useTableStore();\r\nconst { setSearchValue, setPagePagination } = tableStore;\r\nconst { page, limit, search } = storeToRefs(tableStore);\r\n\r\nconst organizationId = ref(localStorage.getItem(\"organizationId\"));\r\n\r\nonMounted(() => {\r\n    setSearchValue(\"\");\r\n});\r\n\r\nwatch(search, () => {\r\n    setPagePagination(1);\r\n});\r\n\r\nconst applicationId = ref(\"\");\r\n\r\nconst debouncedSearch = refDebounced(search, 500);\r\n\r\nconst headers = ref([\r\n    { id: 1, label: \"applicationUserName\", width: 150 },\r\n    { id: 2, label: \"applicationOrganization\", width: 220 },\r\n    { id: 3, label: \"applicationDedline\", width: 265 },\r\n    { id: 4, label: \"applicationConstructionMaterial\", width: 175 },\r\n    { id: 5, label: \"applicationObject\", width: 115 },\r\n    { id: 6, label: \"applicationBlock\", width: 105 },\r\n    { id: 7, label: \"applicationFloor\", width: 100 },\r\n    { id: 8, label: \"applicationCost\", width: 165 },\r\n    { id: 9, label: \"applicationState\", width: 130 },\r\n    { id: 9, label: \"applicationAction\", width: 110 }\r\n]);\r\n\r\nconst {\r\n    data: applications,\r\n    isLoading: isLoadingApplications,\r\n    isSuccess: isSuccessApplications,\r\n    isError\r\n} = await useQuery({\r\n    queryKey: [\"applications\", { page, limit, debouncedSearch, organizationId }],\r\n    queryFn: () => getList(\"api\", page.value, limit.value, debouncedSearch.value, { organizationId: organizationId.value })\r\n});\r\n\r\nconst { mutate: mutateDelete } = useMutation({\r\n    mutationFn: (idx) => deleteWithId(\"api\", idx),\r\n    onSuccess: () => {\r\n        queryClient.invalidateQueries({ queryKey: [\"applications\"] });\r\n        queryClient.invalidateQueries({ queryKey: [\"applicationsById\", applicationId] });\r\n    }\r\n});\r\n\r\nconst deleteHandler = async (idx) => {\r\n    applicationId.value = idx;\r\n    mutateDelete(idx);\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>"],"names":["queryClient","useQueryClient","tableStore","useTableStore","setSearchValue","setPagePagination","page","limit","search","storeToRefs","organizationId","ref","onMounted","watch","applicationId","debouncedSearch","refDebounced","headers","applications","isLoadingApplications","isSuccessApplications","isError","__temp","__restore","_withAsyncContext","useQuery","getList","mutateDelete","useMutation","idx","deleteWithId","deleteHandler"],"mappings":"seAwCA,MAAMA,EAAcC,EAAc,EAE5BC,EAAaC,EAAa,EAC1B,CAAE,eAAAC,EAAgB,kBAAAC,CAAmB,EAAGH,EACxC,CAAE,KAAAI,EAAM,MAAAC,EAAO,OAAAC,CAAQ,EAAGC,EAAYP,CAAU,EAEhDQ,EAAiBC,EAAI,aAAa,QAAQ,gBAAgB,CAAC,EAEjEC,EAAU,IAAM,CACZR,EAAe,EAAE,CACrB,CAAC,EAEDS,EAAML,EAAQ,IAAM,CAChBH,EAAkB,CAAC,CACvB,CAAC,EAED,MAAMS,EAAgBH,EAAI,EAAE,EAEtBI,EAAkBC,EAAaR,EAAQ,GAAG,EAE1CS,EAAUN,EAAI,CAChB,CAAE,GAAI,EAAG,MAAO,sBAAuB,MAAO,GAAK,EACnD,CAAE,GAAI,EAAG,MAAO,0BAA2B,MAAO,GAAK,EACvD,CAAE,GAAI,EAAG,MAAO,qBAAsB,MAAO,GAAK,EAClD,CAAE,GAAI,EAAG,MAAO,kCAAmC,MAAO,GAAK,EAC/D,CAAE,GAAI,EAAG,MAAO,oBAAqB,MAAO,GAAK,EACjD,CAAE,GAAI,EAAG,MAAO,mBAAoB,MAAO,GAAK,EAChD,CAAE,GAAI,EAAG,MAAO,mBAAoB,MAAO,GAAK,EAChD,CAAE,GAAI,EAAG,MAAO,kBAAmB,MAAO,GAAK,EAC/C,CAAE,GAAI,EAAG,MAAO,mBAAoB,MAAO,GAAK,EAChD,CAAE,GAAI,EAAG,MAAO,oBAAqB,MAAO,GAAK,CACrD,CAAC,EAEK,CACF,KAAMO,EACN,UAAWC,EACX,UAAWC,EACX,QAAAC,CACJ,GAAU,CAAAC,EAAAC,CAAA,EAAAC,EAAA,IAAAC,EAAS,CACf,SAAU,CAAC,eAAgB,CAAE,KAAAnB,EAAM,MAAAC,EAAO,gBAAAQ,EAAiB,eAAAL,EAAgB,EAC3E,QAAS,IAAMgB,EAAQ,MAAOpB,EAAK,MAAOC,EAAM,MAAOQ,EAAgB,MAAO,CAAE,eAAgBL,EAAe,KAAK,CAAE,CAC1H,CAAC,CAAA,mBAEK,CAAE,OAAQiB,CAAc,EAAGC,EAAY,CACzC,WAAaC,GAAQC,EAAa,MAAOD,CAAG,EAC5C,UAAW,IAAM,CACb7B,EAAY,kBAAkB,CAAE,SAAU,CAAC,cAAc,CAAG,CAAA,EAC5DA,EAAY,kBAAkB,CAAE,SAAU,CAAC,mBAAoBc,CAAa,CAAC,CAAE,CAClF,CACL,CAAC,EAEKiB,EAAgB,MAAOF,GAAQ,CACjCf,EAAc,MAAQe,EACtBF,EAAaE,CAAG,CACpB"}