{"version":3,"file":"update-tbBy8A2d.js","sources":["../../src/views/cost/update.vue"],"sourcesContent":["<template>\r\n    <section class=\"manage section-height shadowed\" v-if=\"isShow\">\r\n        <div class=\"manage__inner section-padding\">\r\n            <ManageHead \r\n                title=\"editExpensesTitle\" \r\n                :to=\"routes.EXPENS.path\"\r\n            />\r\n            <form class=\"manage__form form-manage\" @submit.prevent=\"submitHandler\">\r\n                <FormInput \r\n                    v-for=\"input in inputs\"\r\n                    :key=\"input.id\"\r\n                    v-model=\"state[input.model]\"\r\n                    :width=\"500\" \r\n                    :placeholder=\"$t(input.placeholder)\"\r\n                    :name=\"input.icon\"\r\n                    :error=\"v$?.[input?.errorKey]?.$error\" \r\n                    :textError=\"v$?.[input?.errorKey]?.$errors[0]?.$message\"\r\n                >\r\n                    {{ $t(input.label) }}\r\n                </FormInput>\r\n                <FormSelect \r\n                    v-for=\"select in selects\"\r\n                    :key=\"select.id\"\r\n                    v-model=\"state[select.model]\" \r\n                    :width=\"500\" \r\n                    :options=\"select.options\"\r\n                    :error=\"v$?.[select?.errorKey]?.$error\" \r\n                    :placeholder=\"select?.placeholder\"\r\n                    :textError=\"v$?.[select?.errorKey]?.$errors[0]?.$message\"\r\n                    :success=\"select.success\"\r\n                    :loading=\"select.loading\"\r\n                >\r\n                    {{ $t(select.label) }}\r\n                </FormSelect>\r\n                <CustomButton \r\n                    :className=\"`form__submit ${v$?.stateId.$errors[0]?.$message ? 'centered' : ''}`\"\r\n                >\r\n                    {{ $t(\"formButton\") }}\r\n                </CustomButton>\r\n            </form>\r\n        </div>\r\n    </section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, watch } from \"vue\";\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport { storeToRefs } from \"pinia\";\r\nimport { useUserStore } from \"@/store/userStore\";\r\nimport { useVuelidate } from \"@vuelidate/core\";\r\nimport { useToast } from \"vue-toastification\";\r\nimport { useI18n } from \"vue-i18n\";\r\nimport { required } from \"@/utils/i18n-validators.js\";\r\nimport { \r\n    useQueryClient, \r\n    useQuery, \r\n    useMutation \r\n} from \"@tanstack/vue-query\";\r\nimport { getWithId, updateById } from \"@/services/crud.services.js\";\r\nimport { manualGetStates } from \"@/services/manual.services.js\";\r\nimport { routes } from \"@/utils/routes.js\";\r\nimport { actionModules } from \"@/utils/action-modules.js\";\r\n\r\nconst queryClient = useQueryClient();\r\nconst router = useRouter();\r\nconst route = useRoute();\r\nconst toast = useToast();\r\nconst { t } = useI18n();\r\n\r\nconst userStore = useUserStore();\r\nconst { user } = storeToRefs(userStore);\r\n\r\nconst isShow = computed(() => !!user?.value.user?.modules?.includes(actionModules.EXPENS.UPDATE));\r\n\r\nconst slugId = ref(route.params.id);\r\n\r\nconst state = ref({\r\n    id: \"\",\r\n    fullName: \"\",\r\n    stateId: []\r\n});\r\n\r\nconst rules = computed(() => ({\r\n    id: { required },\r\n    fullName: { required },\r\n    stateId: { required }\r\n}));\r\n\r\nconst v$ = useVuelidate(rules, state);\r\n\r\nconst {\r\n    data: states,\r\n    isSuccess: isSuccessStates,\r\n    isLoading: isLoadingStates\r\n} = await useQuery({\r\n    queryKey: [\"states\"],\r\n    queryFn: () => manualGetStates(),\r\n    enabled: isShow\r\n});\r\n\r\nconst inputs = ref([\r\n{ \r\n        id: 1, \r\n        model: \"fullName\", \r\n        label: \"nameExpensesLabel\", \r\n        placeholder: \"nameExpensesPlaceholder\", \r\n        icon: \"input-company\",\r\n        errorKey: \"fullName\",\r\n    }\r\n]);\r\n\r\nconst selects = ref([\r\n    { \r\n        id: 1, \r\n        model: \"stateId\", \r\n        label: \"stateExpensesLabel\", \r\n        placeholder: \"stateExpensesPlaceholder\", \r\n        errorKey: \"stateId\", \r\n        options: states,\r\n        success: isSuccessStates,\r\n        loading: isLoadingStates\r\n    }\r\n]);\r\n\r\nconst { isError } = await useQuery({\r\n    queryKey: [\"expensesById\", slugId],\r\n    queryFn: () => getWithId(\"cost\", slugId.value),\r\n    select: (data) => {\r\n        state.value.id = data.id;\r\n        state.value.fullName = data.fullname;\r\n        state.value.stateId = [data.stateId];\r\n    },\r\n    enabled: isShow\r\n});\r\n\r\nwatch(isError, (value) => {\r\n    if (value) {\r\n        router.push(routes.HOME.path);\r\n    }\r\n});\r\n\r\nconst { mutate: updateMutate } = useMutation({\r\n    onMutate: (body) => {\r\n        body.stateId = body.stateId[0];\r\n    },\r\n    mutationFn: (body) => updateById(\"cost\", body),\r\n    onSuccess: () => {\r\n        queryClient.invalidateQueries({ queryKey: [\"expenses\"] });\r\n        queryClient.invalidateQueries({ queryKey: [\"expensesById\", slugId] });\r\n        queryClient.invalidateQueries({ queryKey: [\"costsList\"] });\r\n        \r\n        router.push(routes.EXPENS.path);\r\n    }\r\n});\r\n\r\nconst submitHandler = async () => {\r\n    v$.value.$validate();\r\n\r\n    if (v$.value.$errors.length) {\r\n        return;\r\n    }\r\n\r\n    updateMutate(state.value);\r\n    v$.value.$reset();\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n</style>"],"names":["queryClient","useQueryClient","router","useRouter","route","useRoute","useToast","useI18n","userStore","useUserStore","user","storeToRefs","isShow","computed","_b","_a","actionModules","slugId","ref","state","rules","required","v$","useVuelidate","states","isSuccessStates","isLoadingStates","__temp","__restore","_withAsyncContext","useQuery","manualGetStates","inputs","selects","isError","getWithId","data","watch","value","routes","updateMutate","useMutation","body","updateById","submitHandler"],"mappings":"4nBA+DA,MAAMA,EAAcC,GAAc,EAC5BC,EAASC,GAAS,EAClBC,EAAQC,GAAQ,EACRC,EAAW,EACXC,GAAU,EAExB,MAAMC,EAAYC,GAAY,EACxB,CAAE,KAAAC,CAAM,EAAGC,GAAYH,CAAS,EAEhCI,EAASC,EAAS,IAAA,SAAM,OAAC,GAACC,GAAAC,EAAAL,GAAA,YAAAA,EAAM,MAAM,OAAZ,YAAAK,EAAkB,UAAlB,MAAAD,EAA2B,SAASE,GAAc,OAAO,SAAO,EAE1FC,EAASC,EAAId,EAAM,OAAO,EAAE,EAE5Be,EAAQD,EAAI,CACd,GAAI,GACJ,SAAU,GACV,QAAS,CAAE,CACf,CAAC,EAEKE,EAAQP,EAAS,KAAO,CAC1B,GAAI,CAAE,SAAAQ,CAAU,EAChB,SAAU,CAAE,SAAAA,CAAU,EACtB,QAAS,CAAE,SAAAA,CAAU,CACzB,EAAE,EAEIC,EAAKC,GAAaH,EAAOD,CAAK,EAE9B,CACF,KAAMK,EACN,UAAWC,EACX,UAAWC,CACf,GAAU,CAAAC,EAAAC,CAAA,EAAAC,EAAA,IAAAC,EAAS,CACf,SAAU,CAAC,QAAQ,EACnB,QAAS,IAAMC,GAAiB,EAChC,QAASnB,CACb,CAAC,CAAA,mBAEKoB,EAASd,EAAI,CACnB,CACQ,GAAI,EACJ,MAAO,WACP,MAAO,oBACP,YAAa,0BACb,KAAM,gBACN,SAAU,UACb,CACL,CAAC,EAEKe,EAAUf,EAAI,CAChB,CACI,GAAI,EACJ,MAAO,UACP,MAAO,qBACP,YAAa,2BACb,SAAU,UACV,QAASM,EACT,QAASC,EACT,QAASC,CACZ,CACL,CAAC,EAEK,CAAE,QAAAQ,CAAS,GAAS,CAAAP,EAAAC,CAAA,EAAAC,EAAA,IAAAC,EAAS,CAC/B,SAAU,CAAC,eAAgBb,CAAM,EACjC,QAAS,IAAMkB,GAAU,OAAQlB,EAAO,KAAK,EAC7C,OAASmB,GAAS,CACdjB,EAAM,MAAM,GAAKiB,EAAK,GACtBjB,EAAM,MAAM,SAAWiB,EAAK,SAC5BjB,EAAM,MAAM,QAAU,CAACiB,EAAK,OAAO,CACtC,EACD,QAASxB,CACb,CAAC,CAAA,mBAEDyB,GAAMH,EAAUI,GAAU,CAClBA,GACApC,EAAO,KAAKqC,EAAO,KAAK,IAAI,CAEpC,CAAC,EAED,KAAM,CAAE,OAAQC,CAAc,EAAGC,GAAY,CACzC,SAAWC,GAAS,CAChBA,EAAK,QAAUA,EAAK,QAAQ,CAAC,CAChC,EACD,WAAaA,GAASC,GAAW,OAAQD,CAAI,EAC7C,UAAW,IAAM,CACb1C,EAAY,kBAAkB,CAAE,SAAU,CAAC,UAAU,CAAG,CAAA,EACxDA,EAAY,kBAAkB,CAAE,SAAU,CAAC,eAAgBiB,CAAM,CAAC,CAAE,EACpEjB,EAAY,kBAAkB,CAAE,SAAU,CAAC,WAAW,CAAG,CAAA,EAEzDE,EAAO,KAAKqC,EAAO,OAAO,IAAI,CACjC,CACL,CAAC,EAEKK,EAAgB,SAAY,CAC9BtB,EAAG,MAAM,YAEL,CAAAA,EAAG,MAAM,QAAQ,SAIrBkB,EAAarB,EAAM,KAAK,EACxBG,EAAG,MAAM,SACb"}