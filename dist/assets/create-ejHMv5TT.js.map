{"version":3,"file":"create-ejHMv5TT.js","sources":["../../src/views/products/create.vue"],"sourcesContent":["<template>\r\n    <section class=\"manage section-height\">\r\n        <div class=\"manage__inner section-padding\">\r\n            <Title>\r\n                {{ $t(\"addNewProductTitle\") }}\r\n            </Title>\r\n            <form class=\"manage__form form-manage\" @submit.prevent=\"submitHandler\">\r\n                <FormInput \r\n                    v-for=\"input in inputs\"\r\n                    :key=\"input.id\"\r\n                    v-model=\"state[input.model]\"\r\n                    :width=\"500\" \r\n                    :placeholder=\"$t(input.placeholder)\"\r\n                    :name=\"input.icon\"\r\n                    :error=\"v$?.[input.errorKey]?.$error\" \r\n                    :textError=\"v$?.[input.errorKey]?.$errors[0]?.$message\"\r\n                >\r\n                    {{ $t(input.label) }}\r\n                </FormInput>\r\n                <CustomButton \r\n                    :className=\"`form__submit ${v$?.fullname.$errors[0]?.$message ? 'centered' : ''}`\"\r\n                >\r\n                    {{ $t(\"formButton\") }}\r\n                </CustomButton>\r\n            </form>\r\n        </div>\r\n    </section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport { useVuelidate } from \"@vuelidate/core\";\r\nimport { useToast } from \"vue-toastification\";\r\nimport { useI18n } from \"vue-i18n\";\r\nimport { required } from \"@/utils/i18n-validators.js\";\r\nimport { useQueryClient, useMutation } from \"@tanstack/vue-query\";\r\nimport { create } from \"@/services/crud.services.js\";\r\nimport { routes } from \"@/utils/routes.js\";\r\n\r\nconst queryClient = useQueryClient();\r\nconst router = useRouter();\r\nconst toast = useToast();\r\nconst { t } = useI18n();\r\n\r\nconst state = ref({\r\n    fullname: \"\",\r\n    organizationId: \"\"\r\n});\r\n\r\nconst rules = computed(() => ({\r\n    fullname: { required },\r\n    organizationId: { required }\r\n}));\r\n\r\nconst v$ = useVuelidate(rules, state);\r\n\r\nconst inputs = ref([\r\n    { \r\n        id: 1, \r\n        model: \"fullname\", \r\n        label: \"nameProductsLabel\", \r\n        placeholder: \"nameProductsPlaceholder\", \r\n        icon: \"pen\",\r\n        errorKey: \"fullname\",\r\n    }\r\n]);\r\n\r\nconst { mutate: createMutate } = useMutation({\r\n    mutationFn: (body) => create(\"construction_material\", body),\r\n    onSuccess: () => {\r\n        queryClient.invalidateQueries({ queryKey: [\"products\"] });\r\n        router.push(routes.PRODUCTS.path);\r\n    }\r\n});\r\n\r\nconst submitHandler = () => {\r\n    // const organizationId = localStorage.getItem(\"organizationId\");\r\n    const organizationId = 1;\r\n    state.value.organizationId = organizationId;\r\n\r\n    v$.value.$validate();\r\n\r\n    if (v$.value.$errors.length) {\r\n        return;\r\n    }\r\n\r\n    createMutate(state.value);\r\n    v$.value.$reset();\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>"],"names":["queryClient","useQueryClient","router","useRouter","useToast","useI18n","state","ref","rules","computed","required","v$","useVuelidate","inputs","createMutate","useMutation","body","create","routes","submitHandler"],"mappings":"ubAwCA,MAAMA,EAAcC,EAAc,EAC5BC,EAASC,EAAS,EACVC,EAAW,EACXC,EAAU,EAExB,MAAMC,EAAQC,EAAI,CACd,SAAU,GACV,eAAgB,EACpB,CAAC,EAEKC,EAAQC,EAAS,KAAO,CAC1B,SAAU,CAAE,SAAAC,CAAU,EACtB,eAAgB,CAAE,SAAAA,CAAU,CAChC,EAAE,EAEIC,EAAKC,EAAaJ,EAAOF,CAAK,EAE9BO,EAASN,EAAI,CACf,CACI,GAAI,EACJ,MAAO,WACP,MAAO,oBACP,YAAa,0BACb,KAAM,MACN,SAAU,UACb,CACL,CAAC,EAEK,CAAE,OAAQO,CAAc,EAAGC,EAAY,CACzC,WAAaC,GAASC,EAAO,wBAAyBD,CAAI,EAC1D,UAAW,IAAM,CACbhB,EAAY,kBAAkB,CAAE,SAAU,CAAC,UAAU,CAAG,CAAA,EACxDE,EAAO,KAAKgB,EAAO,SAAS,IAAI,CACnC,CACL,CAAC,EAEKC,EAAgB,IAAM,CAGxBb,EAAM,MAAM,eAAiB,EAE7BK,EAAG,MAAM,YAEL,CAAAA,EAAG,MAAM,QAAQ,SAIrBG,EAAaR,EAAM,KAAK,EACxBK,EAAG,MAAM,SACb;;"}