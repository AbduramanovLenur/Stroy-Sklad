{"version":3,"file":"update-9y9lxjyy.js","sources":["../../src/views/warehouse/update.vue"],"sourcesContent":["<template>\r\n    <section class=\"manage section-height shadowed\">\r\n        <div class=\"manage__inner section-padding\">\r\n            <ManageHead \r\n                title=\"editProductTitle\" \r\n                :to=\"routes.WAREHOUSE.path\"\r\n            />\r\n            <form class=\"manage__form form-manage\" @submit.prevent=\"submitHandler\">\r\n                <FormInput \r\n                    v-for=\"input in inputs\"\r\n                    :key=\"input.id\"\r\n                    v-model=\"state[input.model]\"\r\n                    :width=\"500\" \r\n                    :placeholder=\"$t(input.placeholder)\"\r\n                    :name=\"input.icon\"\r\n                    :error=\"v$?.[input?.errorKey]?.$error\" \r\n                    :textError=\"v$?.[input?.errorKey]?.$errors[0]?.$message\"\r\n                >\r\n                    {{ $t(input.label) }}\r\n                </FormInput>\r\n                <FormSelect \r\n                    v-for=\"select in selects\"\r\n                    :key=\"select.id\"\r\n                    v-model=\"state[select.model]\" \r\n                    :width=\"500\" \r\n                    :options=\"select.options\"\r\n                    :error=\"v$?.[select?.errorKey]?.$error\" \r\n                    :placeholder=\"select?.placeholder\"\r\n                    :textError=\"v$?.[select?.errorKey]?.$errors[0]?.$message\"\r\n                    :success=\"select.success\"\r\n                    :loading=\"select.loading\"\r\n                >\r\n                    {{ $t(select.label) }}\r\n                </FormSelect>\r\n                <CustomButton \r\n                    :className=\"`form__submit ${v$?.stateId.$errors[0]?.$message ? 'centered' : ''}`\"\r\n                >\r\n                    {{ $t(\"formButton\") }}\r\n                </CustomButton>\r\n            </form>\r\n        </div>\r\n    </section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, watch } from \"vue\";\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport { useVuelidate } from \"@vuelidate/core\";\r\nimport { useToast } from \"vue-toastification\";\r\nimport { useI18n } from \"vue-i18n\";\r\nimport { required } from \"@/utils/i18n-validators.js\";\r\nimport { useQueryClient, useQuery, useMutation } from \"@tanstack/vue-query\";\r\nimport { getWithId, updateById } from \"@/services/crud.services.js\";\r\nimport { manualQuantityTypes, manualGetStates, manualConstructionMaterial } from \"@/services/manual.services.js\";\r\nimport { routes } from \"@/utils/routes.js\";\r\n\r\nconst queryClient = useQueryClient();\r\nconst router = useRouter();\r\nconst route = useRoute();\r\nconst toast = useToast();\r\nconst { t } = useI18n();\r\n\r\nconst slugId = ref(route.params.id);\r\n\r\nconst organizationId = ref(localStorage.getItem(\"organizationId\"));\r\n\r\nconst {\r\n    data: quantityTypes,\r\n    isSuccess: isSuccessQunatityTypes,\r\n    isLoading: isLoadingQunatityTypes\r\n} = await useQuery({\r\n    queryKey: [\"types\"],\r\n    queryFn: () => manualQuantityTypes()\r\n});\r\n\r\nconst {\r\n    data: materials,\r\n    isSuccess: isSuccessMaterials,\r\n    isLoading: isLoadingMaterials\r\n} = await useQuery({\r\n    queryKey: [\"materials\", { organizationId }],\r\n    queryFn: () => manualConstructionMaterial(organizationId.value)\r\n});\r\n\r\nconst {\r\n    data: states,\r\n    isSuccess: isSuccessStates,\r\n    isLoading: isLoadingStates\r\n} = await useQuery({\r\n    queryKey: [\"states\"],\r\n    queryFn: () => manualGetStates()\r\n});\r\n\r\nconst state = ref({\r\n    id: \"\",\r\n    materialId: [],\r\n    quantity: \"\",\r\n    quantityTypeId: [],\r\n    organizationId: \"\",\r\n    stateId: []\r\n});\r\n\r\nconst rules = computed(() => ({\r\n    id: { required },\r\n    materialId: { required },\r\n    quantity: { required },\r\n    quantityTypeId: { required },\r\n    organizationId: { required },\r\n    stateId: { required }\r\n}));\r\n\r\nconst v$ = useVuelidate(rules, state);\r\n\r\nconst inputs = ref([\r\n    { \r\n        id: 1, \r\n        model: \"quantity\", \r\n        label: \"quantityWarehouseLabel\", \r\n        placeholder: \"quantityWarehousePlaceholder\", \r\n        icon: \"list\",\r\n        errorKey: \"quantity\",\r\n    }\r\n]);\r\n\r\nconst selects = ref([\r\n    { \r\n        id: 1, \r\n        model: \"materialId\", \r\n        label: \"materialsWarehouseLabel\", \r\n        placeholder: \"materialsWarehousePlaceholder\",\r\n        errorKey: \"materialId\",\r\n        options: materials,\r\n        success: isSuccessMaterials,\r\n        loading: isLoadingMaterials\r\n    },\r\n    { \r\n        id: 2, \r\n        model: \"quantityTypeId\", \r\n        label: \"qunatityTypesWarehouseLabel\", \r\n        placeholder: \"qunatityTypesWarehousePlaceholder\",\r\n        errorKey: \"quantityTypeId\",\r\n        options: quantityTypes,\r\n        success: isSuccessQunatityTypes,\r\n        loading: isLoadingQunatityTypes\r\n    },\r\n    { \r\n        id: 3, \r\n        model: \"stateId\", \r\n        label: \"stateWarehouseLabel\", \r\n        placeholder: \"stateWarehousePlaceholder\",\r\n        errorKey: \"stateId\",\r\n        options: states,\r\n        success: isSuccessStates,\r\n        loading: isLoadingStates\r\n    }\r\n]);\r\n\r\nconst { isError } = await useQuery({\r\n    queryKey: [\"warehouseById\", slugId],\r\n    queryFn: () => getWithId(\"warehouse\", slugId.value),\r\n    select: (data) => {\r\n        state.value.id = data.id;\r\n        state.value.materialId = [data.materialId];\r\n        state.value.quantity = data.quantity;\r\n        state.value.quantityTypeId = [data.quantityTypeId];\r\n        state.value.organizationId = data.organizationId;\r\n        state.value.stateId = [data.stateId];\r\n    }\r\n});\r\n\r\nwatch(isError, (value) => {\r\n    if (value) {\r\n        router.push(routes.HOME.path);\r\n    }\r\n});\r\n\r\nconst { mutate: updateMutate } = useMutation({\r\n    onMutate: (body) => {\r\n        body.materialId = body.materialId[0];\r\n        body.quantityTypeId = body.quantityTypeId[0];\r\n        body.stateId = body.stateId[0];\r\n    },\r\n    mutationFn: (body) => updateById(\"warehouse\", body),\r\n    onSuccess: () => {\r\n        queryClient.invalidateQueries({ queryKey: [\"warehouse\"] });\r\n        queryClient.invalidateQueries({ queryKey: [\"warehouseById\", slugId] });\r\n        router.push(routes.WAREHOUSE.path);\r\n    }\r\n});\r\n\r\nconst submitHandler = async () => {\r\n    state.value.organizationId = organizationId.value;\r\n\r\n    v$.value.$validate();\r\n\r\n    if (v$.value.$errors.length) {\r\n        return;\r\n    }\r\n\r\n    updateMutate(state.value);\r\n    v$.value.$reset();\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n</style>"],"names":["queryClient","useQueryClient","router","useRouter","route","useRoute","useToast","useI18n","slugId","ref","organizationId","quantityTypes","isSuccessQunatityTypes","isLoadingQunatityTypes","__temp","__restore","_withAsyncContext","useQuery","manualQuantityTypes","materials","isSuccessMaterials","isLoadingMaterials","manualConstructionMaterial","states","isSuccessStates","isLoadingStates","manualGetStates","state","rules","computed","required","v$","useVuelidate","inputs","selects","isError","getWithId","data","watch","value","routes","updateMutate","useMutation","body","updateById","submitHandler"],"mappings":"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"}