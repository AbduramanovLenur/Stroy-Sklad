{"version":3,"file":"index-ACvKVGsz.js","sources":["../../src/views/products/index.vue"],"sourcesContent":["<template>\r\n    <section class=\"products section-height\">\r\n        <div class=\"products__inner section-padding\">\r\n            <HeadPage \r\n                title=\"productsTitle\" \r\n                :to=\"routes.CREATE_PRODUCTS.path\"\r\n                @onSearch=\"($event) => search = $event\"\r\n            />\r\n            <Table \r\n                v-if=\"isSuccessProducts && products.length\"\r\n                :headers=\"headers\" \r\n                :table=\"products\"\r\n                :to=\"routes.UPDATE_PRODUCTS.name\"\r\n                @onActionDelete=\"deleteHandler\"\r\n            />\r\n            <Spinner v-if=\"isLoadingProducts\" />\r\n            <div \r\n                v-if=\"(isSuccessProducts && !products.length) || isError\" \r\n                class=\"empty-table\"\r\n            >\r\n                {{ $t(\"emptyTableTitle\") }}\r\n            </div>\r\n        </div>\r\n    </section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\nimport { useQueryClient, useQuery, useMutation } from \"@tanstack/vue-query\";\r\nimport { getList, deleteWithId } from \"@/services/crud.services.js\";\r\nimport { routes } from \"@/utils/routes.js\";\r\n\r\nconst queryClient = useQueryClient();\r\n\r\nconst search = ref(\"\");\r\nconst productsId = ref(\"\");\r\n\r\nconst headers = ref([\r\n    { id: 1, label: \"productsName\", width: 725 },\r\n    { id: 4, label: \"productsState\", width: 365 },\r\n    { id: 5, label: \"productsAction\", width: 440 }\r\n]);\r\n\r\nconst {\r\n    data: products,\r\n    isLoading: isLoadingProducts,\r\n    isSuccess: isSuccessProducts,\r\n    isError\r\n} = await useQuery({\r\n    queryKey: [\"products\"],\r\n    queryFn: () => getList(\"construction_material\"),\r\n    select: (data) => {\r\n        return data.map((elem) => {\r\n            const product = {\r\n                ...elem\r\n            }\r\n\r\n            delete product.organizationName;\r\n\r\n            return product;\r\n        })\r\n    }\r\n});\r\n\r\nconst { mutate: mutateDelete } = useMutation({\r\n    mutationFn: (idx) => deleteWithId(\"construction_material\", idx),\r\n    onSuccess: () => {\r\n        queryClient.invalidateQueries({ queryKey: [\"products\"] });\r\n        queryClient.invalidateQueries({ queryKey: [\"productsById\", productsId] });\r\n    }\r\n});\r\n\r\nconst deleteHandler = async (idx) => {\r\n    productsId.value = idx;\r\n    mutateDelete(idx);\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>"],"names":["queryClient","useQueryClient","search","ref","productsId","headers","products","isLoadingProducts","isSuccessProducts","isError","__temp","__restore","_withAsyncContext","useQuery","getList","data","elem","product","mutateDelete","useMutation","idx","deleteWithId","deleteHandler"],"mappings":"yaAgCA,MAAMA,EAAcC,EAAc,EAE5BC,EAASC,EAAI,EAAE,EACfC,EAAaD,EAAI,EAAE,EAEnBE,EAAUF,EAAI,CAChB,CAAE,GAAI,EAAG,MAAO,eAAgB,MAAO,GAAK,EAC5C,CAAE,GAAI,EAAG,MAAO,gBAAiB,MAAO,GAAK,EAC7C,CAAE,GAAI,EAAG,MAAO,iBAAkB,MAAO,GAAK,CAClD,CAAC,EAEK,CACF,KAAMG,EACN,UAAWC,EACX,UAAWC,EACX,QAAAC,CACJ,GAAU,CAAAC,EAAAC,CAAA,EAAAC,EAAA,IAAAC,EAAS,CACf,SAAU,CAAC,UAAU,EACrB,QAAS,IAAMC,EAAQ,uBAAuB,EAC9C,OAASC,GACEA,EAAK,IAAKC,GAAS,CACtB,MAAMC,EAAU,CACZ,GAAGD,CACN,EAED,cAAOC,EAAQ,iBAERA,CACnB,CAAS,CAET,CAAC,CAAA,mBAEK,CAAE,OAAQC,CAAc,EAAGC,EAAY,CACzC,WAAaC,GAAQC,EAAa,wBAAyBD,CAAG,EAC9D,UAAW,IAAM,CACbpB,EAAY,kBAAkB,CAAE,SAAU,CAAC,UAAU,CAAG,CAAA,EACxDA,EAAY,kBAAkB,CAAE,SAAU,CAAC,eAAgBI,CAAU,CAAC,CAAE,CAC3E,CACL,CAAC,EAEKkB,EAAgB,MAAOF,GAAQ,CACjChB,EAAW,MAAQgB,EACnBF,EAAaE,CAAG,CACpB"}