{"version":3,"file":"update-2Y2THyfa.js","sources":["../../src/views/applications/update.vue"],"sourcesContent":["<template>\r\n    <section class=\"manage section-height shadowed\">\r\n        <div class=\"manage__inner section-padding\">\r\n            <ManageHead \r\n                title=\"editApplicationTitle\" \r\n                :to=\"routes.APPLICATIONS.path\"\r\n            />\r\n            <form class=\"manage__form form-manage\" @submit.prevent=\"submitHandler\">\r\n                <FormInput \r\n                    v-for=\"input in inputs\"\r\n                    :key=\"input.id\"\r\n                    v-model=\"state[input.model]\"\r\n                    :width=\"500\" \r\n                    :placeholder=\"$t(input.placeholder)\"\r\n                    :name=\"input.icon\"\r\n                    :error=\"v$?.[input.errorKey]?.$error\" \r\n                    :textError=\"v$?.[input.errorKey]?.$errors[0]?.$message\"\r\n                    :type=\"input?.type\"\r\n                >\r\n                    {{ $t(input.label) }}\r\n                </FormInput>\r\n                <FormSelect \r\n                    v-for=\"select in selects\"\r\n                    :key=\"select.id\"\r\n                    v-model=\"state[select.model]\" \r\n                    :width=\"500\" \r\n                    :options=\"select.options\"\r\n                    :error=\"v$?.[select?.errorKey]?.$error\" \r\n                    :placeholder=\"select?.placeholder\"\r\n                    :textError=\"v$?.[select?.errorKey]?.$errors[0]?.$message\"\r\n                    :success=\"select.success\"\r\n                    :loading=\"select.loading\"\r\n                    :isMultiSelect=\"select?.multiple\"\r\n                    :optionValue=\"select?.optionValue\"\r\n                >\r\n                    {{ $t(select.label) }}\r\n                </FormSelect>\r\n                <CustomButton \r\n                    :className=\"`form__submit`\"\r\n                >\r\n                    {{ $t(\"formButton\") }}\r\n                </CustomButton>\r\n            </form>\r\n        </div>\r\n    </section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, watch } from \"vue\";\r\nimport { useRouter, useRoute } from \"vue-router\";\r\nimport { useVuelidate } from \"@vuelidate/core\";\r\nimport { useToast } from \"vue-toastification\";\r\nimport { useI18n } from \"vue-i18n\";\r\nimport { required } from \"@/utils/i18n-validators.js\";\r\nimport { useQueryClient, useQuery, useMutation } from \"@tanstack/vue-query\";\r\nimport { getWithId, updateById } from \"@/services/crud.services.js\";\r\nimport { \r\n    manualConstructionMaterial, \r\n    manualGetFloors, \r\n    manualGetCost, \r\n    manualGetObjects, \r\n    manualGetBlocks \r\n} from \"@/services/manual.services.js\";\r\nimport { routes } from \"@/utils/routes.js\";\r\n\r\nconst queryClient = useQueryClient();\r\nconst router = useRouter();\r\nconst route = useRoute();\r\nconst toast = useToast();\r\nconst { t } = useI18n();\r\n\r\nconst slugId = ref(route.params.id);\r\n\r\nconst organizationId = ref(localStorage.getItem(\"organizationId\"));\r\n\r\nconst isSubmit = ref(false);\r\nconst isFirstChange = ref(false);\r\n\r\nconst state = ref({\r\n    userId: \"\",\r\n    organizationId: \"\",\r\n    deadline: \"\",\r\n    constructionMaterialIds: [],\r\n    buildingObjectId: [],\r\n    buildingBlockId: [],\r\n    floor: [],\r\n    costId: [],\r\n});\r\n\r\nconst {\r\n    data: floors,\r\n    isSuccess: isSuccessFloors,\r\n    isLoading: isLoadingFloors\r\n} = await useQuery({\r\n    queryKey: [\"floors\", { organizationId }],\r\n    queryFn: () => manualGetFloors(organizationId.value)\r\n});\r\n\r\nconst {\r\n    data: costs,\r\n    isSuccess: isSuccessCosts,\r\n    isLoading: isLoadingCosts\r\n} = await useQuery({\r\n    queryKey: [\"costs\", { organizationId }],\r\n    queryFn: () => manualGetCost(organizationId.value)\r\n});\r\n\r\nconst {\r\n    data: materials,\r\n    isSuccess: isSuccessMaterials,\r\n    isLoading: isLoadingMaterials\r\n} = await useQuery({\r\n    queryKey: [\"materials\", { organizationId }],\r\n    queryFn: () => manualConstructionMaterial(organizationId.value)\r\n});\r\n\r\nconst {\r\n    data: objects,\r\n    isSuccess: isSuccessObjects,\r\n    isLoading: isLoadingObjects\r\n} = await useQuery({\r\n    queryKey: [\"objectsList\", { organizationId }],\r\n    queryFn: () => manualGetObjects(organizationId.value),\r\n\r\n});\r\n\r\nconst valueObject = computed(() => state.value.buildingObjectId);\r\n\r\nconst isEnabled = computed(() => !!valueObject.value.length);\r\n\r\nwatch(valueObject, () => {\r\n    if (!isFirstChange.value && !isSubmit.value) {\r\n        state.value.buildingBlockId = [];\r\n    }\r\n\r\n    isFirstChange.value = false;\r\n}, { immediate: true });\r\n\r\nconst {\r\n    data: blocks,\r\n    isSuccess: isSuccessBlocks,\r\n    isLoading: isLoadingBlocks\r\n} = await useQuery({\r\n    queryKey: [\"blocksList\", { blockId: valueObject }],\r\n    queryFn: () => manualGetBlocks(valueObject.value),\r\n    enabled: isEnabled\r\n});\r\n\r\nconst rules = computed(() => ({\r\n    userId: { required },\r\n    organizationId: { required },\r\n    deadline: { required },\r\n    constructionMaterialIds: { required },\r\n    buildingObjectId: { required },\r\n    buildingBlockId: { required },\r\n    floor: { required },\r\n    costId: { required },\r\n}));\r\n\r\nconst v$ = useVuelidate(rules, state);\r\n\r\nconst inputs = ref([\r\n    { \r\n        id: 1, \r\n        model: \"deadline\", \r\n        label: \"dateAppLabel\", \r\n        placeholder: \"dateAppPlaceholder\", \r\n        icon: \"date\",\r\n        errorKey: \"deadline\",\r\n        type: \"date\"\r\n    }\r\n]);\r\n\r\nconst selects = ref([\r\n    { \r\n        id: 1, \r\n        model: \"floor\", \r\n        label: \"floorsAppLabel\", \r\n        placeholder: \"floorsAppPlaceholder\", \r\n        errorKey: \"floor\",\r\n        options: floors,\r\n        success: isSuccessFloors,\r\n        loading: isLoadingFloors,\r\n        optionValue: \"name\"\r\n    },\r\n    { \r\n        id: 2, \r\n        model: \"constructionMaterialIds\", \r\n        label: \"materialsAppLabel\", \r\n        placeholder: \"materialsAppPlaceholder\",\r\n        errorKey: \"constructionMaterialIds\",\r\n        options: materials,\r\n        success: isSuccessMaterials,\r\n        loading: isLoadingMaterials,\r\n        multiple: true\r\n    },\r\n    { \r\n        id: 3, \r\n        model: \"costId\", \r\n        label: \"costAppLabel\", \r\n        placeholder: \"costAppPlaceholder\",\r\n        errorKey: \"costId\",\r\n        options: costs,\r\n        success: isSuccessCosts,\r\n        loading: isLoadingCosts\r\n    },\r\n    { \r\n        id: 4, \r\n        model: \"buildingObjectId\", \r\n        label: \"objectAppLabel\", \r\n        placeholder: \"objectAppPlaceholder\",\r\n        errorKey: \"buildingObjectId\",\r\n        options: objects,\r\n        success: isSuccessObjects,\r\n        loading: isLoadingObjects\r\n    },\r\n    { \r\n        id: 5, \r\n        model: \"buildingBlockId\", \r\n        label: \"blockAppLabel\", \r\n        placeholder: \"blockAppPlaceholder\",\r\n        errorKey: \"buildingBlockId\",\r\n        options: blocks,\r\n        success: isSuccessBlocks,\r\n        loading: isLoadingBlocks\r\n    }\r\n]);\r\n\r\nconst { isError } = await useQuery({\r\n    queryKey: [\"applicationsById\", slugId],\r\n    queryFn: () => getWithId(\"application\", slugId.value),\r\n    select: (data) => {\r\n        state.value.id = data.id;\r\n        state.value.userId = data.userId;\r\n        state.value.organizationId = data.organizationId;\r\n        state.value.deadline = data.deadline;\r\n        state.value.constructionMaterialIds = [...data.constructionMaterialIds];\r\n        state.value.buildingObjectId = [data.buildingObjectId];\r\n        state.value.buildingBlockId = [data.buildingBlockId];\r\n        state.value.floor = [data.floor];\r\n        state.value.costId = [data.costId];\r\n\r\n        isFirstChange.value = true;\r\n    }\r\n});\r\n\r\nwatch(isError, (value) => {\r\n    if (value) {\r\n        router.push(routes.HOME.path);\r\n    }\r\n});\r\n\r\nconst { mutate: updateMutate } = useMutation({\r\n    onMutate: (body) => {\r\n        isSubmit.value = true;\r\n        \r\n        body.buildingObjectId = body.buildingObjectId[0];\r\n        body.buildingBlockId = body.buildingBlockId[0];\r\n        body.floor = body.floor[0];\r\n        body.costId = body.costId[0];\r\n    },\r\n    mutationFn: (body) => updateById(\"application\", body),\r\n    onSuccess: () => {\r\n        queryClient.invalidateQueries({ queryKey: [\"applications\"] });\r\n        queryClient.invalidateQueries({ queryKey: [\"applicationsById\", slugId] });\r\n        router.push(routes.APPLICATIONS.path);\r\n        // setTimeout(() => toast.success(t(\"updateToast\")), 1000);\r\n    }\r\n});\r\n\r\nconst submitHandler = async () => {\r\n    v$.value.$validate();\r\n\r\n    if (v$.value.$errors.length) {\r\n        return;\r\n    }\r\n\r\n    updateMutate(state.value);\r\n    v$.value.$reset();\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>"],"names":["queryClient","useQueryClient","router","useRouter","route","useRoute","useToast","useI18n","slugId","ref","organizationId","isSubmit","isFirstChange","state","floors","isSuccessFloors","isLoadingFloors","__temp","__restore","_withAsyncContext","useQuery","manualGetFloors","costs","isSuccessCosts","isLoadingCosts","manualGetCost","materials","isSuccessMaterials","isLoadingMaterials","manualConstructionMaterial","objects","isSuccessObjects","isLoadingObjects","manualGetObjects","valueObject","computed","isEnabled","watch","blocks","isSuccessBlocks","isLoadingBlocks","manualGetBlocks","rules","required","v$","useVuelidate","inputs","selects","isError","getWithId","data","value","routes","updateMutate","useMutation","body","updateById","submitHandler"],"mappings":"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"}