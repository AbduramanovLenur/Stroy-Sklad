{"version":3,"file":"index-qo0qBenD.js","sources":["../../src/views/objects/index.vue"],"sourcesContent":["<template>\r\n    <section class=\"object section-height\">\r\n        <div class=\"object__inner section-padding\">\r\n            <HeadPage \r\n                title=\"objectTitle\" \r\n                :to=\"routes.CREATE_OBJECTS.path\"\r\n                @onSearch=\"($event) => search = $event\"\r\n            />\r\n            <Table \r\n                v-if=\"isSuccessObjects && objects.length\"\r\n                :headers=\"headers\" \r\n                :table=\"objects\"\r\n                :to=\"routes.UPDATE_OBJECTS.name\"\r\n                @onActionDelete=\"deleteHandler\"\r\n            />\r\n            <Spinner v-if=\"isLoadingObjects\" />\r\n            <div \r\n                v-if=\"(isSuccessObjects && !objects.length) || isError\" \r\n                class=\"empty-table\"\r\n            >\r\n                {{ $t(\"emptyTableTitle\") }}\r\n            </div>\r\n        </div>\r\n    </section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\nimport { useQueryClient, useQuery, useMutation } from \"@tanstack/vue-query\";\r\nimport { getList, deleteWithId } from \"@/services/crud.services.js\";\r\nimport { routes } from \"@/utils/routes.js\";\r\n\r\nconst queryClient = useQueryClient();\r\n\r\nconst search = ref(\"\");\r\nconst objectsId = ref(\"\");\r\n\r\nconst headers = ref([\r\n    { id: 1, label: \"objectName\", width: 385 },\r\n    { id: 2, label: \"objectOrganization\", width: 480 },\r\n    { id: 3, label: \"objectAddress\", width: 185 },\r\n    { id: 4, label: \"objectState\", width: 255 },\r\n    { id: 5, label: \"objectAction\", width: 255 }\r\n]);\r\n\r\nconst {\r\n    data: objects,\r\n    isLoading: isLoadingObjects,\r\n    isSuccess: isSuccessObjects,\r\n    isError\r\n} = await useQuery({\r\n    queryKey: [\"objects\"],\r\n    queryFn: () => getList(\"building_object\")\r\n});\r\n\r\nconst { mutate: mutateDelete } = useMutation({\r\n    mutationFn: (idx) => deleteWithId(\"building_object\", idx),\r\n    onSuccess: () => {\r\n        queryClient.invalidateQueries({ queryKey: [\"objects\"] });\r\n        queryClient.invalidateQueries({ queryKey: [\"objectById\", objectsId] });\r\n    }\r\n});\r\n\r\nconst deleteHandler = async (idx) => {\r\n    objectsId.value = idx;\r\n    mutateDelete(idx);\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.object {\r\n    &__form {\r\n        display: grid;\r\n        grid-template-columns: repeat(2, 1fr);\r\n        gap: 20px;\r\n        @media (max-width: 1024px) {\r\n            gap: 10px;\r\n        }\r\n        @media (max-width: 768px) {\r\n            grid-template-columns: repeat(1, 1fr);\r\n            gap: 20px;\r\n        }\r\n    }\r\n}\r\n</style>"],"names":["queryClient","useQueryClient","search","ref","objectsId","headers","objects","isLoadingObjects","isSuccessObjects","isError","__temp","__restore","_withAsyncContext","useQuery","getList","mutateDelete","useMutation","idx","deleteWithId","deleteHandler"],"mappings":"kaAgCA,MAAMA,EAAcC,EAAc,EAE5BC,EAASC,EAAI,EAAE,EACfC,EAAYD,EAAI,EAAE,EAElBE,EAAUF,EAAI,CAChB,CAAE,GAAI,EAAG,MAAO,aAAc,MAAO,GAAK,EAC1C,CAAE,GAAI,EAAG,MAAO,qBAAsB,MAAO,GAAK,EAClD,CAAE,GAAI,EAAG,MAAO,gBAAiB,MAAO,GAAK,EAC7C,CAAE,GAAI,EAAG,MAAO,cAAe,MAAO,GAAK,EAC3C,CAAE,GAAI,EAAG,MAAO,eAAgB,MAAO,GAAK,CAChD,CAAC,EAEK,CACF,KAAMG,EACN,UAAWC,EACX,UAAWC,EACX,QAAAC,CACJ,GAAU,CAAAC,EAAAC,CAAA,EAAAC,EAAA,IAAAC,EAAS,CACf,SAAU,CAAC,SAAS,EACpB,QAAS,IAAMC,EAAQ,iBAAiB,CAC5C,CAAC,CAAA,mBAEK,CAAE,OAAQC,CAAc,EAAGC,EAAY,CACzC,WAAaC,GAAQC,EAAa,kBAAmBD,CAAG,EACxD,UAAW,IAAM,CACbjB,EAAY,kBAAkB,CAAE,SAAU,CAAC,SAAS,CAAG,CAAA,EACvDA,EAAY,kBAAkB,CAAE,SAAU,CAAC,aAAcI,CAAS,CAAC,CAAE,CACxE,CACL,CAAC,EAEKe,EAAgB,MAAOF,GAAQ,CACjCb,EAAU,MAAQa,EAClBF,EAAaE,CAAG,CACpB"}